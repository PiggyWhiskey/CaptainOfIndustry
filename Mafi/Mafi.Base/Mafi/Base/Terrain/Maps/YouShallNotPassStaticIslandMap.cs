// Decompiled with JetBrains decompiler
// Type: Mafi.Base.Terrain.Maps.YouShallNotPassStaticIslandMap
// Assembly: Mafi.Base, Version=0.6.3.0, Culture=neutral, PublicKeyToken=null
// MVID: 189C759C-DBD6-48EA-AEF6-5D1D80F045F4
// Assembly location: D:\GameLibrary\SteamLibrary\steamapps\common\Captain of Industry\Captain of Industry_Data\Managed\Mafi.Base.dll
// XML documentation location: D:\GameLibrary\SteamLibrary\steamapps\common\Captain of Industry\Captain of Industry_Data\Managed\Mafi.Base.xml

using eLxG93FZl5M3yHxFGb;
using Mafi.Collections.ImmutableCollections;
using Mafi.Core;
using Mafi.Core.Map;
using Mafi.Core.Products;
using Mafi.Core.Prototypes;
using Mafi.Core.Terrain.Generation;
using Mafi.Core.Terrain.Generation.Generators;
using Mafi.Core.Terrain.Props;
using Mafi.Core.Terrain.Trees;
using Mafi.Localization;
using Mafi.Random.Noise;
using System.Collections.Generic;

#nullable disable
namespace Mafi.Base.Terrain.Maps
{
  public class YouShallNotPassStaticIslandMap : IStaticIslandMap
  {
    public static readonly LocStr LocName;
    public static readonly LocStr LocDescription;
    private readonly ProtosDb m_protosDb;
    private readonly IslandMapDifficultyConfig m_mapDifficultyConfig;

    public string Name => nameof (YouShallNotPassStaticIslandMap);

    public YouShallNotPassStaticIslandMap(
      ProtosDb protosDb,
      IslandMapDifficultyConfig mapDifficultyConfig)
    {
      MBiHIp97M4MqqbtZOh.chMFXj727();
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this.m_protosDb = protosDb;
      this.m_mapDifficultyConfig = mapDifficultyConfig;
    }

    public static StaticIslandMapPreviewData GetPreviewData()
    {
      return new StaticIslandMapPreviewData(YouShallNotPassStaticIslandMap.LocName, YouShallNotPassStaticIslandMap.LocDescription, IslandMapDifficulty.Insane, typeof (YouShallNotPassStaticIslandMap), ImmutableArray.Create<StartingLocation>(new StartingLocation(new Tile2i(762, 1405), new Direction90(2))), "Assets/Base/Maps/YouShallNotPass.jpg", ImmutableArray.Create<KeyValuePair<ProductProto.ID, QuantityLarge>>(new KeyValuePair<ProductProto.ID, QuantityLarge>(new ProductProto.ID("Product_Coal"), new QuantityLarge(4124500L)), new KeyValuePair<ProductProto.ID, QuantityLarge>(new ProductProto.ID("Product_CopperOre"), new QuantityLarge(10826690L)), new KeyValuePair<ProductProto.ID, QuantityLarge>(new ProductProto.ID("Product_CrudeOil"), new QuantityLarge(100000L)), new KeyValuePair<ProductProto.ID, QuantityLarge>(new ProductProto.ID("Product_Dirt"), new QuantityLarge(6971417L)), new KeyValuePair<ProductProto.ID, QuantityLarge>(new ProductProto.ID("Product_GoldOre"), new QuantityLarge(12936620L)), new KeyValuePair<ProductProto.ID, QuantityLarge>(new ProductProto.ID("Product_IronOre"), new QuantityLarge(8552089L)), new KeyValuePair<ProductProto.ID, QuantityLarge>(new ProductProto.ID("Product_Limestone"), new QuantityLarge(7606207L)), new KeyValuePair<ProductProto.ID, QuantityLarge>(new ProductProto.ID("Product_Quartz"), new QuantityLarge(10545757L)), new KeyValuePair<ProductProto.ID, QuantityLarge>(new ProductProto.ID("Product_Rock"), new QuantityLarge(58098312L)), new KeyValuePair<ProductProto.ID, QuantityLarge>(new ProductProto.ID("Product_Sand"), new QuantityLarge(9853898L)), new KeyValuePair<ProductProto.ID, QuantityLarge>(new ProductProto.ID("Product_Water"), new QuantityLarge(99000L)), new KeyValuePair<ProductProto.ID, QuantityLarge>(new ProductProto.ID("Product_Wood"), new QuantityLarge(158020L))), ImmutableArray.Create<KeyValuePair<HeightTilesI, int>>(new KeyValuePair<HeightTilesI, int>(new HeightTilesI(-30), 7208960), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(-29), 1831267), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(-28), 1809702), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(-27), 1788327), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(-26), 1767393), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(-25), 1746964), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(-24), 1726896), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(-23), 1707526), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(-22), 1689235), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(-21), 1672399), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(-20), 1657306), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(-19), 1643021), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(-18), 1629524), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(-17), 1616242), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(-16), 1603590), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(-15), 1591743), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(-14), 1580742), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(-13), 1569844), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(-12), 1558753), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(-11), 1547612), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(-10), 1536491), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(-9), 1525338), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(-8), 1514384), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(-7), 1503653), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(-6), 1493417), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(-5), 1482946), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(-4), 1472164), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(-3), 1461169), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(-2), 1449938), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(-1), 1438237), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(0), 1426073), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(1), 1413539), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(2), 1400363), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(3), 1322109), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(4), 1302828), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(5), 1286325), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(6), 1271985), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(7), 1260859), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(8), 1251493), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(9), 1241880), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(10), 1230053), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(11), 1190830), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(12), 1173845), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(13), 1151412), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(14), 1128299), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(15), 1109277), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(16), 1095473), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(17), 1084853), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(18), 1077100), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(19), 1070726), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(20), 1064837), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(21), 1059083), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(22), 1053290), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(23), 1047480), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(24), 1041845), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(25), 1036297), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(26), 1030932), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(27), 1025700), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(28), 1020207), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(29), 1014634), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(30), 1009250), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(31), 1003951), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(32), 998590), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(33), 993086), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(34), 987370), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(35), 981697), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(36), 976141), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(37), 970638), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(38), 965248), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(39), 960043), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(40), 954663), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(41), 949100), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(42), 942934), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(43), 936705), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(44), 930068), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(45), 922586), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(46), 270665), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(47), 198968), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(48), 157002), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(49), 133967), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(50), 121468), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(51), 113218), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(52), 105688), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(53), 98289), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(54), 91571), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(55), 85168), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(56), 79304), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(57), 73259), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(58), 67301), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(59), 61196), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(60), 55392), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(61), 49586), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(62), 44483), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(63), 39550), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(64), 35008), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(65), 30830), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(66), 27268), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(67), 23923), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(68), 20748), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(69), 18053), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(70), 15918), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(71), 14004), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(72), 12305), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(73), 10746), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(74), 9225), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(75), 7928), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(76), 6723), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(77), 5559), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(78), 4621), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(79), 3811), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(80), 3079), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(81), 2462), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(82), 1793), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(83), 1208), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(84), 770), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(85), 467), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(86), 263), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(87), 166), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(88), 111), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(89), 77), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(90), 56), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(91), 36), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(92), 16), new KeyValuePair<HeightTilesI, int>(new HeightTilesI(93), 2)), new RelTile2i(2816, 2560), 1424308, 631671);
    }

    public IslandMap CreateIslandMap(StartingLocation startingLocation)
    {
      return new IslandMap(this.Name, 1, startingLocation, this.m_protosDb, this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Bedrock), this.createMapCells(), this.createControlPoints(), this.createCellEdgePoints(), this.createResourceGenerators(), this.createVirtualResources(), this.createPostProcessors(), this.getTerrainProps(), this.createMapConfig(), this.m_mapDifficultyConfig);
    }

    private ImmutableArray<MapCell> createMapCells()
    {
      MapCell[] mapCellArray = new MapCell[31];
      mapCellArray[0] = new MapCell(new MapCellId(0), 31, ImmutableArray.Create<int>(0, 1, 2, 3, 4, 5), ImmutableArray.Create<MapCellId?>(new MapCellId?(new MapCellId(2)), new MapCellId?(new MapCellId(20)), new MapCellId?(new MapCellId(22)), new MapCellId?(new MapCellId(15)), new MapCellId?(new MapCellId(16)), new MapCellId?(new MapCellId(1))), false, false, false, true, new HeightTilesI(45), (ICellSurfaceGenerator) new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Grass)), MapCellState.NotAvailable, Option<IMapCellEdgeTerrainFactory>.Some((IMapCellEdgeTerrainFactory) new CellEdgeTerrainGeneratorFactory(10, this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Rock), new RelTile1i(1), new RelTile1i(3), Percent.FromRaw(1200), new RelTile1i(1), new ThicknessTilesI(15), new SimplexNoise2dSeed(Fix32.FromRaw(6434), Fix32.FromRaw(1448)), new NoiseTurbulenceParams(6, Percent.FromRaw(192000), Percent.FromRaw(50000)), true)));
      MapCellId id1 = new MapCellId(1);
      ImmutableArray<int> perimeterIndices1 = ImmutableArray.Create<int>(6, 7, 0, 5, 8);
      MapCellId?[] nullableArray1 = new MapCellId?[5];
      nullableArray1[1] = new MapCellId?(new MapCellId(2));
      nullableArray1[2] = new MapCellId?(new MapCellId(0));
      nullableArray1[3] = new MapCellId?(new MapCellId(16));
      nullableArray1[4] = new MapCellId?(new MapCellId(7));
      ImmutableArray<MapCellId?> neighborCellsIndices1 = ImmutableArray.Create<MapCellId?>(nullableArray1);
      HeightTilesI groundHeight1 = new HeightTilesI(-10);
      MapCellSurfaceGenerator surfaceGenerator1 = new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Rock));
      Option<IMapCellEdgeTerrainFactory> none1 = Option<IMapCellEdgeTerrainFactory>.None;
      mapCellArray[1] = new MapCell(id1, 20, perimeterIndices1, neighborCellsIndices1, true, false, true, true, groundHeight1, (ICellSurfaceGenerator) surfaceGenerator1, MapCellState.NotAvailable, none1);
      MapCellId id2 = new MapCellId(2);
      ImmutableArray<int> perimeterIndices2 = ImmutableArray.Create<int>(7, 9, 10, 1, 0);
      MapCellId?[] nullableArray2 = new MapCellId?[5];
      nullableArray2[1] = new MapCellId?(new MapCellId(10));
      nullableArray2[2] = new MapCellId?(new MapCellId(11));
      nullableArray2[3] = new MapCellId?(new MapCellId(0));
      nullableArray2[4] = new MapCellId?(new MapCellId(1));
      ImmutableArray<MapCellId?> neighborCellsIndices2 = ImmutableArray.Create<MapCellId?>(nullableArray2);
      HeightTilesI groundHeight2 = new HeightTilesI(-10);
      MapCellSurfaceGenerator surfaceGenerator2 = new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Rock));
      Option<IMapCellEdgeTerrainFactory> none2 = Option<IMapCellEdgeTerrainFactory>.None;
      mapCellArray[2] = new MapCell(id2, 14, perimeterIndices2, neighborCellsIndices2, true, false, true, true, groundHeight2, (ICellSurfaceGenerator) surfaceGenerator2, MapCellState.NotAvailable, none2);
      mapCellArray[3] = new MapCell(new MapCellId(3), 43, ImmutableArray.Create<int>(11, 12, 13, 14), ImmutableArray.Create<MapCellId?>(new MapCellId?(new MapCellId(19)), new MapCellId?(new MapCellId(18)), new MapCellId?(), new MapCellId?(new MapCellId(24))), true, false, true, true, new HeightTilesI(-10), (ICellSurfaceGenerator) new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Rock)), MapCellState.NotAvailable, Option<IMapCellEdgeTerrainFactory>.None);
      mapCellArray[4] = new MapCell(new MapCellId(4), 40, ImmutableArray.Create<int>(15, 16, 17, 18, 19), ImmutableArray.Create<MapCellId?>(new MapCellId?(new MapCellId(30)), new MapCellId?(new MapCellId(26)), new MapCellId?(new MapCellId(23)), new MapCellId?(new MapCellId(5)), new MapCellId?(new MapCellId(6))), false, false, false, true, new HeightTilesI(45), (ICellSurfaceGenerator) new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Grass)), MapCellState.NotAvailable, Option<IMapCellEdgeTerrainFactory>.Some((IMapCellEdgeTerrainFactory) new CellEdgeTerrainGeneratorFactory(10, this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Rock), new RelTile1i(1), new RelTile1i(3), Percent.FromRaw(1200), new RelTile1i(1), new ThicknessTilesI(15), new SimplexNoise2dSeed(Fix32.FromRaw(6434), Fix32.FromRaw(1448)), new NoiseTurbulenceParams(6, Percent.FromRaw(192000), Percent.FromRaw(50000)), true)));
      MapCellId id3 = new MapCellId(5);
      ImmutableArray<int> perimeterIndices3 = ImmutableArray.Create<int>(20, 19, 18, 21, 22, 23);
      MapCellId?[] nullableArray3 = new MapCellId?[6];
      nullableArray3[0] = new MapCellId?(new MapCellId(6));
      nullableArray3[1] = new MapCellId?(new MapCellId(4));
      nullableArray3[2] = new MapCellId?(new MapCellId(23));
      nullableArray3[5] = new MapCellId?(new MapCellId(9));
      ImmutableArray<MapCellId?> neighborCellsIndices3 = ImmutableArray.Create<MapCellId?>(nullableArray3);
      HeightTilesI groundHeight3 = new HeightTilesI(-10);
      MapCellSurfaceGenerator surfaceGenerator3 = new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Rock));
      Option<IMapCellEdgeTerrainFactory> none3 = Option<IMapCellEdgeTerrainFactory>.None;
      mapCellArray[5] = new MapCell(id3, 4, perimeterIndices3, neighborCellsIndices3, true, false, true, true, groundHeight3, (ICellSurfaceGenerator) surfaceGenerator3, MapCellState.NotAvailable, none3);
      mapCellArray[6] = new MapCell(new MapCellId(6), 38, ImmutableArray.Create<int>(20, 24, 15, 19), ImmutableArray.Create<MapCellId?>(new MapCellId?(new MapCellId(28)), new MapCellId?(new MapCellId(30)), new MapCellId?(new MapCellId(4)), new MapCellId?(new MapCellId(5))), false, false, false, true, new HeightTilesI(45), (ICellSurfaceGenerator) new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Grass)), MapCellState.NotAvailable, Option<IMapCellEdgeTerrainFactory>.Some((IMapCellEdgeTerrainFactory) new CellEdgeTerrainGeneratorFactory(10, this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Rock), new RelTile1i(1), new RelTile1i(3), Percent.FromRaw(1200), new RelTile1i(1), new ThicknessTilesI(15), new SimplexNoise2dSeed(Fix32.FromRaw(6434), Fix32.FromRaw(1448)), new NoiseTurbulenceParams(6, Percent.FromRaw(192000), Percent.FromRaw(50000)), true)));
      MapCellId id4 = new MapCellId(7);
      ImmutableArray<int> perimeterIndices4 = ImmutableArray.Create<int>(6, 8, 25, 26, 27);
      MapCellId?[] nullableArray4 = new MapCellId?[5];
      nullableArray4[0] = new MapCellId?(new MapCellId(1));
      nullableArray4[1] = new MapCellId?(new MapCellId(16));
      nullableArray4[2] = new MapCellId?(new MapCellId(8));
      ImmutableArray<MapCellId?> neighborCellsIndices4 = ImmutableArray.Create<MapCellId?>(nullableArray4);
      HeightTilesI groundHeight4 = new HeightTilesI(-10);
      MapCellSurfaceGenerator surfaceGenerator4 = new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Rock));
      Option<IMapCellEdgeTerrainFactory> none4 = Option<IMapCellEdgeTerrainFactory>.None;
      mapCellArray[7] = new MapCell(id4, 17, perimeterIndices4, neighborCellsIndices4, true, false, true, true, groundHeight4, (ICellSurfaceGenerator) surfaceGenerator4, MapCellState.NotAvailable, none4);
      MapCellId id5 = new MapCellId(8);
      ImmutableArray<int> perimeterIndices5 = ImmutableArray.Create<int>(26, 25, 28, 29, 30);
      MapCellId?[] nullableArray5 = new MapCellId?[5];
      nullableArray5[0] = new MapCellId?(new MapCellId(7));
      nullableArray5[1] = new MapCellId?(new MapCellId(15));
      nullableArray5[2] = new MapCellId?(new MapCellId(9));
      ImmutableArray<MapCellId?> neighborCellsIndices5 = ImmutableArray.Create<MapCellId?>(nullableArray5);
      HeightTilesI groundHeight5 = new HeightTilesI(-10);
      MapCellSurfaceGenerator surfaceGenerator5 = new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Rock));
      Option<IMapCellEdgeTerrainFactory> none5 = Option<IMapCellEdgeTerrainFactory>.None;
      mapCellArray[8] = new MapCell(id5, 5, perimeterIndices5, neighborCellsIndices5, true, false, true, true, groundHeight5, (ICellSurfaceGenerator) surfaceGenerator5, MapCellState.NotAvailable, none5);
      mapCellArray[9] = new MapCell(new MapCellId(9), 16, ImmutableArray.Create<int>(29, 28, 20, 23), ImmutableArray.Create<MapCellId?>(new MapCellId?(new MapCellId(8)), new MapCellId?(new MapCellId(28)), new MapCellId?(new MapCellId(5)), new MapCellId?()), true, false, true, true, new HeightTilesI(-10), (ICellSurfaceGenerator) new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Rock)), MapCellState.NotAvailable, Option<IMapCellEdgeTerrainFactory>.None);
      mapCellArray[10] = new MapCell(new MapCellId(10), 39, ImmutableArray.Create<int>(31, 32, 10, 9), ImmutableArray.Create<MapCellId?>(new MapCellId?(), new MapCellId?(new MapCellId(11)), new MapCellId?(new MapCellId(2)), new MapCellId?()), true, false, true, true, new HeightTilesI(-10), (ICellSurfaceGenerator) new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Rock)), MapCellState.NotAvailable, Option<IMapCellEdgeTerrainFactory>.None);
      MapCellId id6 = new MapCellId(11);
      ImmutableArray<int> perimeterIndices6 = ImmutableArray.Create<int>(10, 32, 33, 34, 35, 1);
      MapCellId?[] nullableArray6 = new MapCellId?[6];
      nullableArray6[0] = new MapCellId?(new MapCellId(10));
      nullableArray6[3] = new MapCellId?(new MapCellId(14));
      nullableArray6[4] = new MapCellId?(new MapCellId(20));
      nullableArray6[5] = new MapCellId?(new MapCellId(2));
      ImmutableArray<MapCellId?> neighborCellsIndices6 = ImmutableArray.Create<MapCellId?>(nullableArray6);
      HeightTilesI groundHeight6 = new HeightTilesI(-10);
      MapCellSurfaceGenerator surfaceGenerator6 = new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Rock));
      Option<IMapCellEdgeTerrainFactory> none6 = Option<IMapCellEdgeTerrainFactory>.None;
      mapCellArray[11] = new MapCell(id6, 36, perimeterIndices6, neighborCellsIndices6, true, false, true, true, groundHeight6, (ICellSurfaceGenerator) surfaceGenerator6, MapCellState.NotAvailable, none6);
      MapCellId id7 = new MapCellId(12);
      ImmutableArray<int> perimeterIndices7 = ImmutableArray.Create<int>(36, 37, 38, 39, 40, 41, 42);
      MapCellId?[] nullableArray7 = new MapCellId?[7];
      nullableArray7[0] = new MapCellId?(new MapCellId(13));
      nullableArray7[4] = new MapCellId?(new MapCellId(18));
      nullableArray7[5] = new MapCellId?(new MapCellId(17));
      nullableArray7[6] = new MapCellId?(new MapCellId(21));
      ImmutableArray<MapCellId?> neighborCellsIndices7 = ImmutableArray.Create<MapCellId?>(nullableArray7);
      HeightTilesI groundHeight7 = new HeightTilesI(-10);
      MapCellSurfaceGenerator surfaceGenerator7 = new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Rock));
      Option<IMapCellEdgeTerrainFactory> none7 = Option<IMapCellEdgeTerrainFactory>.None;
      mapCellArray[12] = new MapCell(id7, 11, perimeterIndices7, neighborCellsIndices7, true, false, true, true, groundHeight7, (ICellSurfaceGenerator) surfaceGenerator7, MapCellState.NotAvailable, none7);
      mapCellArray[13] = new MapCell(new MapCellId(13), 9, ImmutableArray.Create<int>(43, 44, 37, 36), ImmutableArray.Create<MapCellId?>(new MapCellId?(new MapCellId(14)), new MapCellId?(), new MapCellId?(new MapCellId(12)), new MapCellId?(new MapCellId(25))), true, false, true, true, new HeightTilesI(-10), (ICellSurfaceGenerator) new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Rock)), MapCellState.NotAvailable, Option<IMapCellEdgeTerrainFactory>.None);
      MapCellId id8 = new MapCellId(14);
      ImmutableArray<int> perimeterIndices8 = ImmutableArray.Create<int>(34, 45, 44, 43, 35);
      MapCellId?[] nullableArray8 = new MapCellId?[5];
      nullableArray8[2] = new MapCellId?(new MapCellId(13));
      nullableArray8[3] = new MapCellId?(new MapCellId(29));
      nullableArray8[4] = new MapCellId?(new MapCellId(11));
      ImmutableArray<MapCellId?> neighborCellsIndices8 = ImmutableArray.Create<MapCellId?>(nullableArray8);
      HeightTilesI groundHeight8 = new HeightTilesI(-10);
      MapCellSurfaceGenerator surfaceGenerator8 = new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Rock));
      Option<IMapCellEdgeTerrainFactory> none8 = Option<IMapCellEdgeTerrainFactory>.None;
      mapCellArray[14] = new MapCell(id8, 23, perimeterIndices8, neighborCellsIndices8, true, false, true, true, groundHeight8, (ICellSurfaceGenerator) surfaceGenerator8, MapCellState.NotAvailable, none8);
      mapCellArray[15] = new MapCell(new MapCellId(15), 33, ImmutableArray.Create<int>(25, 4, 3, 46, 28), ImmutableArray.Create<MapCellId?>(new MapCellId?(new MapCellId(16)), new MapCellId?(new MapCellId(0)), new MapCellId?(new MapCellId(22)), new MapCellId?(new MapCellId(28)), new MapCellId?(new MapCellId(8))), false, false, false, true, new HeightTilesI(45), (ICellSurfaceGenerator) new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Grass)), MapCellState.NotAvailable, Option<IMapCellEdgeTerrainFactory>.Some((IMapCellEdgeTerrainFactory) new CellEdgeTerrainGeneratorFactory(10, this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Rock), new RelTile1i(1), new RelTile1i(3), Percent.FromRaw(1200), new RelTile1i(1), new ThicknessTilesI(15), new SimplexNoise2dSeed(Fix32.FromRaw(6434), Fix32.FromRaw(1448)), new NoiseTurbulenceParams(6, Percent.FromRaw(192000), Percent.FromRaw(50000)), true)));
      mapCellArray[16] = new MapCell(new MapCellId(16), 32, ImmutableArray.Create<int>(8, 5, 4, 25), ImmutableArray.Create<MapCellId?>(new MapCellId?(new MapCellId(1)), new MapCellId?(new MapCellId(0)), new MapCellId?(new MapCellId(15)), new MapCellId?(new MapCellId(7))), false, false, false, true, new HeightTilesI(45), (ICellSurfaceGenerator) new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Grass)), MapCellState.NotAvailable, Option<IMapCellEdgeTerrainFactory>.Some((IMapCellEdgeTerrainFactory) new CellEdgeTerrainGeneratorFactory(10, this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Rock), new RelTile1i(1), new RelTile1i(3), Percent.FromRaw(1200), new RelTile1i(1), new ThicknessTilesI(15), new SimplexNoise2dSeed(Fix32.FromRaw(6434), Fix32.FromRaw(1448)), new NoiseTurbulenceParams(6, Percent.FromRaw(192000), Percent.FromRaw(50000)), true)));
      mapCellArray[17] = new MapCell(new MapCellId(17), 24, ImmutableArray.Create<int>(47, 42, 41, 48, 49), ImmutableArray.Create<MapCellId?>(new MapCellId?(new MapCellId(21)), new MapCellId?(new MapCellId(12)), new MapCellId?(new MapCellId(18)), new MapCellId?(new MapCellId(19)), new MapCellId?(new MapCellId(27))), false, true, false, true, new HeightTilesI(2), (ICellSurfaceGenerator) new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Grass)), MapCellState.NotAvailable, Option<IMapCellEdgeTerrainFactory>.Some((IMapCellEdgeTerrainFactory) new CellEdgeTerrainGeneratorFactory(10, this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Rock), new RelTile1i(80), new RelTile1i(0), Percent.FromRaw(300), new RelTile1i(1), new ThicknessTilesI(5), new SimplexNoise2dSeed(Fix32.FromRaw(1448), Fix32.FromRaw(3434)), new NoiseTurbulenceParams(5, Percent.FromRaw(192000), Percent.FromRaw(50000)), true)));
      MapCellId id9 = new MapCellId(18);
      ImmutableArray<int> perimeterIndices9 = ImmutableArray.Create<int>(48, 41, 40, 13, 12);
      MapCellId?[] nullableArray9 = new MapCellId?[5];
      nullableArray9[0] = new MapCellId?(new MapCellId(17));
      nullableArray9[1] = new MapCellId?(new MapCellId(12));
      nullableArray9[3] = new MapCellId?(new MapCellId(3));
      nullableArray9[4] = new MapCellId?(new MapCellId(19));
      ImmutableArray<MapCellId?> neighborCellsIndices9 = ImmutableArray.Create<MapCellId?>(nullableArray9);
      HeightTilesI groundHeight9 = new HeightTilesI(-10);
      MapCellSurfaceGenerator surfaceGenerator9 = new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Rock));
      Option<IMapCellEdgeTerrainFactory> none9 = Option<IMapCellEdgeTerrainFactory>.None;
      mapCellArray[18] = new MapCell(id9, 0, perimeterIndices9, neighborCellsIndices9, true, false, true, true, groundHeight9, (ICellSurfaceGenerator) surfaceGenerator9, MapCellState.NotAvailable, none9);
      mapCellArray[19] = new MapCell(new MapCellId(19), 42, ImmutableArray.Create<int>(50, 49, 48, 12, 11, 51), ImmutableArray.Create<MapCellId?>(new MapCellId?(new MapCellId(27)), new MapCellId?(new MapCellId(17)), new MapCellId?(new MapCellId(18)), new MapCellId?(new MapCellId(3)), new MapCellId?(new MapCellId(24)), new MapCellId?(new MapCellId(30))), false, true, false, true, new HeightTilesI(2), (ICellSurfaceGenerator) new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Grass)), MapCellState.NotAvailable, Option<IMapCellEdgeTerrainFactory>.Some((IMapCellEdgeTerrainFactory) new CellEdgeTerrainGeneratorFactory(10, this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Rock), new RelTile1i(60), new RelTile1i(0), Percent.FromRaw(300), new RelTile1i(1), new ThicknessTilesI(5), new SimplexNoise2dSeed(Fix32.FromRaw(554), Fix32.FromRaw(618)), new NoiseTurbulenceParams(5, Percent.FromRaw(192000), Percent.FromRaw(50000)), true)));
      mapCellArray[20] = new MapCell(new MapCellId(20), 30, ImmutableArray.Create<int>(1, 35, 52, 2), ImmutableArray.Create<MapCellId?>(new MapCellId?(new MapCellId(11)), new MapCellId?(new MapCellId(29)), new MapCellId?(new MapCellId(22)), new MapCellId?(new MapCellId(0))), false, false, false, true, new HeightTilesI(45), (ICellSurfaceGenerator) new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Grass)), MapCellState.NotAvailable, Option<IMapCellEdgeTerrainFactory>.Some((IMapCellEdgeTerrainFactory) new CellEdgeTerrainGeneratorFactory(10, this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Rock), new RelTile1i(1), new RelTile1i(3), Percent.FromRaw(1200), new RelTile1i(1), new ThicknessTilesI(15), new SimplexNoise2dSeed(Fix32.FromRaw(6434), Fix32.FromRaw(1448)), new NoiseTurbulenceParams(6, Percent.FromRaw(192000), Percent.FromRaw(50000)), true)));
      mapCellArray[21] = new MapCell(new MapCellId(21), 28, ImmutableArray.Create<int>(53, 36, 42, 47), ImmutableArray.Create<MapCellId?>(new MapCellId?(new MapCellId(25)), new MapCellId?(new MapCellId(12)), new MapCellId?(new MapCellId(17)), new MapCellId?(new MapCellId(27))), false, false, false, true, new HeightTilesI(45), (ICellSurfaceGenerator) new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Grass)), MapCellState.NotAvailable, Option<IMapCellEdgeTerrainFactory>.Some((IMapCellEdgeTerrainFactory) new CellEdgeTerrainGeneratorFactory(10, this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Rock), new RelTile1i(1), new RelTile1i(2), Percent.FromRaw(1200), new RelTile1i(1), new ThicknessTilesI(15), new SimplexNoise2dSeed(Fix32.FromRaw(354), Fix32.FromRaw(1735)), new NoiseTurbulenceParams(6, Percent.FromRaw(192000), Percent.FromRaw(50000)), true)));
      mapCellArray[22] = new MapCell(new MapCellId(22), 15, ImmutableArray.Create<int>(2, 52, 54, 55, 46, 3), ImmutableArray.Create<MapCellId?>(new MapCellId?(new MapCellId(20)), new MapCellId?(new MapCellId(29)), new MapCellId?(new MapCellId(27)), new MapCellId?(new MapCellId(30)), new MapCellId?(new MapCellId(15)), new MapCellId?(new MapCellId(0))), false, true, false, true, new HeightTilesI(2), (ICellSurfaceGenerator) new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Grass)), MapCellState.NotAvailable, Option<IMapCellEdgeTerrainFactory>.Some((IMapCellEdgeTerrainFactory) new CellEdgeTerrainGeneratorFactory(10, this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Rock), new RelTile1i(1), new RelTile1i(4), Percent.FromRaw(1200), new RelTile1i(1), new ThicknessTilesI(15), new SimplexNoise2dSeed(Fix32.FromRaw(6434), Fix32.FromRaw(1448)), new NoiseTurbulenceParams(6, Percent.FromRaw(192000), Percent.FromRaw(50000)), true)));
      MapCellId id10 = new MapCellId(23);
      ImmutableArray<int> perimeterIndices10 = ImmutableArray.Create<int>(21, 18, 17, 56, 57, 58);
      MapCellId?[] nullableArray10 = new MapCellId?[6];
      nullableArray10[0] = new MapCellId?(new MapCellId(5));
      nullableArray10[1] = new MapCellId?(new MapCellId(4));
      nullableArray10[2] = new MapCellId?(new MapCellId(26));
      nullableArray10[3] = new MapCellId?(new MapCellId(24));
      ImmutableArray<MapCellId?> neighborCellsIndices10 = ImmutableArray.Create<MapCellId?>(nullableArray10);
      HeightTilesI groundHeight10 = new HeightTilesI(-10);
      MapCellSurfaceGenerator surfaceGenerator10 = new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Rock));
      Option<IMapCellEdgeTerrainFactory> none10 = Option<IMapCellEdgeTerrainFactory>.None;
      mapCellArray[23] = new MapCell(id10, 22, perimeterIndices10, neighborCellsIndices10, true, false, true, true, groundHeight10, (ICellSurfaceGenerator) surfaceGenerator10, MapCellState.NotAvailable, none10);
      MapCellId id11 = new MapCellId(24);
      ImmutableArray<int> perimeterIndices11 = ImmutableArray.Create<int>(51, 11, 14, 57, 56);
      MapCellId?[] nullableArray11 = new MapCellId?[5];
      nullableArray11[0] = new MapCellId?(new MapCellId(19));
      nullableArray11[1] = new MapCellId?(new MapCellId(3));
      nullableArray11[3] = new MapCellId?(new MapCellId(23));
      nullableArray11[4] = new MapCellId?(new MapCellId(26));
      ImmutableArray<MapCellId?> neighborCellsIndices11 = ImmutableArray.Create<MapCellId?>(nullableArray11);
      HeightTilesI groundHeight11 = new HeightTilesI(-10);
      MapCellSurfaceGenerator surfaceGenerator11 = new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Rock));
      Option<IMapCellEdgeTerrainFactory> none11 = Option<IMapCellEdgeTerrainFactory>.None;
      mapCellArray[24] = new MapCell(id11, 2, perimeterIndices11, neighborCellsIndices11, true, false, true, true, groundHeight11, (ICellSurfaceGenerator) surfaceGenerator11, MapCellState.NotAvailable, none11);
      mapCellArray[25] = new MapCell(new MapCellId(25), 29, ImmutableArray.Create<int>(43, 36, 53), ImmutableArray.Create<MapCellId?>(new MapCellId?(new MapCellId(13)), new MapCellId?(new MapCellId(21)), new MapCellId?(new MapCellId(29))), false, false, false, true, new HeightTilesI(45), (ICellSurfaceGenerator) new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Grass)), MapCellState.NotAvailable, Option<IMapCellEdgeTerrainFactory>.Some((IMapCellEdgeTerrainFactory) new CellEdgeTerrainGeneratorFactory(10, this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Rock), new RelTile1i(1), new RelTile1i(3), Percent.FromRaw(1200), new RelTile1i(1), new ThicknessTilesI(15), new SimplexNoise2dSeed(Fix32.FromRaw(6434), Fix32.FromRaw(1448)), new NoiseTurbulenceParams(6, Percent.FromRaw(192000), Percent.FromRaw(50000)), true)));
      mapCellArray[26] = new MapCell(new MapCellId(26), 41, ImmutableArray.Create<int>(16, 51, 56, 17), ImmutableArray.Create<MapCellId?>(new MapCellId?(new MapCellId(30)), new MapCellId?(new MapCellId(24)), new MapCellId?(new MapCellId(23)), new MapCellId?(new MapCellId(4))), false, false, false, true, new HeightTilesI(45), (ICellSurfaceGenerator) new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Grass)), MapCellState.NotAvailable, Option<IMapCellEdgeTerrainFactory>.Some((IMapCellEdgeTerrainFactory) new CellEdgeTerrainGeneratorFactory(4, this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Rock), new RelTile1i(1), new RelTile1i(3), Percent.FromRaw(1200), new RelTile1i(1), new ThicknessTilesI(15), new SimplexNoise2dSeed(Fix32.FromRaw(6434), Fix32.FromRaw(1448)), new NoiseTurbulenceParams(6, Percent.FromRaw(192000), Percent.FromRaw(50000)), true)));
      mapCellArray[27] = new MapCell(new MapCellId(27), 37, ImmutableArray.Create<int>(54, 53, 47, 49, 50, 55), ImmutableArray.Create<MapCellId?>(new MapCellId?(new MapCellId(29)), new MapCellId?(new MapCellId(21)), new MapCellId?(new MapCellId(17)), new MapCellId?(new MapCellId(19)), new MapCellId?(new MapCellId(30)), new MapCellId?(new MapCellId(22))), false, true, false, true, new HeightTilesI(2), (ICellSurfaceGenerator) new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Grass)), MapCellState.NotAvailable, Option<IMapCellEdgeTerrainFactory>.Some((IMapCellEdgeTerrainFactory) new CellEdgeTerrainGeneratorFactory(10, this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Rock), new RelTile1i(1), new RelTile1i(4), Percent.FromRaw(1200), new RelTile1i(1), new ThicknessTilesI(15), new SimplexNoise2dSeed(Fix32.FromRaw(6434), Fix32.FromRaw(1448)), new NoiseTurbulenceParams(6, Percent.FromRaw(192000), Percent.FromRaw(50000)), true)));
      mapCellArray[28] = new MapCell(new MapCellId(28), 34, ImmutableArray.Create<int>(28, 46, 24, 20), ImmutableArray.Create<MapCellId?>(new MapCellId?(new MapCellId(15)), new MapCellId?(new MapCellId(30)), new MapCellId?(new MapCellId(6)), new MapCellId?(new MapCellId(9))), false, false, false, true, new HeightTilesI(45), (ICellSurfaceGenerator) new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Grass)), MapCellState.NotAvailable, Option<IMapCellEdgeTerrainFactory>.Some((IMapCellEdgeTerrainFactory) new CellEdgeTerrainGeneratorFactory(10, this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Rock), new RelTile1i(1), new RelTile1i(3), Percent.FromRaw(1200), new RelTile1i(1), new ThicknessTilesI(15), new SimplexNoise2dSeed(Fix32.FromRaw(6434), Fix32.FromRaw(1448)), new NoiseTurbulenceParams(6, Percent.FromRaw(192000), Percent.FromRaw(50000)), true)));
      mapCellArray[29] = new MapCell(new MapCellId(29), 35, ImmutableArray.Create<int>(35, 43, 53, 54, 52), ImmutableArray.Create<MapCellId?>(new MapCellId?(new MapCellId(14)), new MapCellId?(new MapCellId(25)), new MapCellId?(new MapCellId(27)), new MapCellId?(new MapCellId(22)), new MapCellId?(new MapCellId(20))), false, false, false, true, new HeightTilesI(45), (ICellSurfaceGenerator) new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Grass)), MapCellState.NotAvailable, Option<IMapCellEdgeTerrainFactory>.Some((IMapCellEdgeTerrainFactory) new CellEdgeTerrainGeneratorFactory(10, this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Rock), new RelTile1i(1), new RelTile1i(3), Percent.FromRaw(1200), new RelTile1i(1), new ThicknessTilesI(15), new SimplexNoise2dSeed(Fix32.FromRaw(6434), Fix32.FromRaw(1448)), new NoiseTurbulenceParams(6, Percent.FromRaw(192000), Percent.FromRaw(50000)), true)));
      mapCellArray[30] = new MapCell(new MapCellId(30), 25, ImmutableArray.Create<int>(46, 55, 50, 51, 16, 15, 24), ImmutableArray.Create<MapCellId?>(new MapCellId?(new MapCellId(22)), new MapCellId?(new MapCellId(27)), new MapCellId?(new MapCellId(19)), new MapCellId?(new MapCellId(26)), new MapCellId?(new MapCellId(4)), new MapCellId?(new MapCellId(6)), new MapCellId?(new MapCellId(28))), false, true, false, true, new HeightTilesI(10), (ICellSurfaceGenerator) new MapCellSurfaceGenerator(this.m_protosDb.GetOrThrow<MapCellSurfaceGeneratorProto>((Proto.ID) Ids.CellSurfaces.Grass)), MapCellState.NotAvailable, Option<IMapCellEdgeTerrainFactory>.Some((IMapCellEdgeTerrainFactory) new CellEdgeTerrainGeneratorFactory(10, this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Rock), new RelTile1i(1), new RelTile1i(4), Percent.FromRaw(1200), new RelTile1i(1), new ThicknessTilesI(15), new SimplexNoise2dSeed(Fix32.FromRaw(6434), Fix32.FromRaw(1448)), new NoiseTurbulenceParams(6, Percent.FromRaw(192000), Percent.FromRaw(50000)), true)));
      return ImmutableArray.Create<MapCell>(mapCellArray);
    }

    private ImmutableArray<Tile2i> createControlPoints()
    {
      return ImmutableArray.Create<Tile2i>(new Tile2i(643, 1445), new Tile2i(265, 1296), new Tile2i(768, 1033), new Tile2i(351, 398), new Tile2i(1171, 796), new Tile2i(1708, 797), new Tile2i(1902, 469), new Tile2i(2039, 1975), new Tile2i(1466, 2347), new Tile2i(1192, 1857), new Tile2i(1212, 2384), new Tile2i(833, 1677), new Tile2i(360, 2020), new Tile2i(2346, 1385), new Tile2i(1999, 1652), new Tile2i(1164, 1416), new Tile2i(1364, 766), new Tile2i(1929, 994), new Tile2i(2305, 1723), new Tile2i(2230, 838), new Tile2i(2034, 1381), new Tile2i(247, 1011), new Tile2i(901, 715), new Tile2i(1430, 1897), new Tile2i(942, 1492), new Tile2i(1077, 1218), new Tile2i(1002, 32), new Tile2i(1537, 165), new Tile2i(995, 1597), new Tile2i(1192, 1741), new Tile2i(1496, 1586), new Tile2i(1592, 1410), new Tile2i(1654, 1176), new Tile2i(1531, 1023), new Tile2i(1387, 951), new Tile2i(1275, 1659), new Tile2i(1576, 1793), new Tile2i(1088, 1474), new Tile2i(1146, 892), new Tile2i(1941, 1838), new Tile2i(1045, 941), new Tile2i(909, 995), new Tile2i(906, 1374), new Tile2i(655, 1374), new Tile2i(307, 1515));
    }

    private ImmutableArray<Tile2i> createCellEdgePoints()
    {
      return ImmutableArray.Create<Tile2i>(new Tile2i(1819, 1491), new Tile2i(1749, 1608), new Tile2i(1378, 1408), new Tile2i(1376, 1246), new Tile2i(1419, 1239), new Tile2i(1809, 1342), new Tile2i(2193, 1131), new Tile2i(2188, 1537), new Tile2i(1878, 1215), new Tile2i(2127, 1794), new Tile2i(1775, 1684), new Tile2i(780, 1226), new Tile2i(780, 1432), new Tile2i(453, 1376), new Tile2i(499, 1138), new Tile2i(1169, 1067), new Tile2i(1023, 1084), new Tile2i(932, 854), new Tile2i(1024, 796), new Tile2i(1046, 815), new Tile2i(1281, 870), new Tile2i(1142, 402), new Tile2i(1197, 390), new Tile2i(1207, 395), new Tile2i(1228, 1080), new Tile2i(1731, 994), new Tile2i(1967, 729), new Tile2i(1982, 728), new Tile2i(1532, 841), new Tile2i(1562, 497), new Tile2i(1572, 495), new Tile2i(2131, 1806), new Tile2i(1724, 2097), new Tile2i(1719, 2109), new Tile2i(1687, 2103), new Tile2i(1423, 1733), new Tile2i(995, 1801), new Tile2i(828, 2134), new Tile2i(811, 2144), new Tile2i(523, 1747), new Tile2i(528, 1733), new Tile2i(784, 1523), new Tile2i(888, 1585), new Tile2i(1324, 1799), new Tile2i(1270, 2118), new Tile2i(1305, 2134), new Tile2i(1346, 1218), new Tile2i(1019, 1519), new Tile2i(792, 1473), new Tile2i(1006, 1408), new Tile2i(1039, 1348), new Tile2i(884, 1184), new Tile2i(1339, 1483), new Tile2i(1138, 1608), new Tile2i(1203, 1545), new Tile2i(1051, 1347), new Tile2i(797, 858), new Tile2i(519, 742), new Tile2i(749, 343));
    }

    private ImmutableArray<ITerrainResourceGenerator> createResourceGenerators()
    {
      return ImmutableArray.Create<ITerrainResourceGenerator>((ITerrainResourceGenerator) new LineBlobTerrainResourceGenerator(new Tile2i(1415, 1484), new Tile2i(1433, 1121), this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Grass), new RelTile1i(100), new RelTile1i(80), new SimplexNoise2dParams(Fix32.FromRaw(2048), Fix32.FromRaw(5120), Fix32.FromRaw(133120)), new SimplexNoise2dSeed(Fix32.FromRaw(474), Fix32.FromRaw(375)), new ThicknessTilesI(1), -10, Percent.FromRaw(0), belowSurfaceExtraHeight: Percent.FromRaw(100000), shapeInversionDepth: new ThicknessTilesI(1), groundLevelBias: Percent.FromRaw(0), turbulenceParams: new NoiseTurbulenceParams(5, Percent.FromRaw(192000), Percent.FromRaw(50000)), steppedNoiseParams: new SteppedNoiseParams(Fix32.FromRaw(0), Fix32.FromRaw(0)), onlyPlaceOnTopAboveGround: true, limitToParentCellHeight: true, sigmoidCenterDistance: Fix32.FromRaw(51200), sigmoidSmoothness: Fix32.FromRaw(10240), surfaceCoverResourceProto: Option<TerrainMaterialProto>.None, surfaceCoverThickness: new SimplexNoise2dParams(Fix32.FromRaw(128), Fix32.FromRaw(512), Fix32.FromRaw(20480)), coordWarpNoiseParams: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(5120), Fix32.FromRaw(51200)), heightBiasAtFromPoint: new ThicknessTilesF(Fix32.FromRaw(0)), heightBiasAtToPoint: new ThicknessTilesF(Fix32.FromRaw(0))), (ITerrainResourceGenerator) new LineBlobTerrainResourceGenerator(new Tile2i(1265, 1680), new Tile2i(1032, 1676), this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Grass), new RelTile1i(100), new RelTile1i(80), new SimplexNoise2dParams(Fix32.FromRaw(2048), Fix32.FromRaw(5120), Fix32.FromRaw(133120)), new SimplexNoise2dSeed(Fix32.FromRaw(474), Fix32.FromRaw(375)), new ThicknessTilesI(1), -10, Percent.FromRaw(0), belowSurfaceExtraHeight: Percent.FromRaw(100000), shapeInversionDepth: new ThicknessTilesI(1), groundLevelBias: Percent.FromRaw(0), turbulenceParams: new NoiseTurbulenceParams(5, Percent.FromRaw(192000), Percent.FromRaw(50000)), steppedNoiseParams: new SteppedNoiseParams(Fix32.FromRaw(0), Fix32.FromRaw(0)), onlyPlaceOnTopAboveGround: true, limitToParentCellHeight: true, sigmoidCenterDistance: Fix32.FromRaw(51200), sigmoidSmoothness: Fix32.FromRaw(10240), surfaceCoverResourceProto: Option<TerrainMaterialProto>.None, surfaceCoverThickness: new SimplexNoise2dParams(Fix32.FromRaw(128), Fix32.FromRaw(512), Fix32.FromRaw(20480)), coordWarpNoiseParams: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(5120), Fix32.FromRaw(51200)), heightBiasAtFromPoint: new ThicknessTilesF(Fix32.FromRaw(0)), heightBiasAtToPoint: new ThicknessTilesF(Fix32.FromRaw(0))), (ITerrainResourceGenerator) new LineBlobTerrainResourceGenerator(new Tile2i(819, 1178), new Tile2i(905, 1266), this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Rock), new RelTile1i(1), new RelTile1i(110), new SimplexNoise2dParams(Fix32.FromRaw(71680), Fix32.FromRaw(20480), Fix32.FromRaw(133120)), new SimplexNoise2dSeed(Fix32.FromRaw(474), Fix32.FromRaw(375)), new ThicknessTilesI(30), -1, Percent.FromRaw(0), belowSurfaceExtraHeight: Percent.FromRaw(100000), shapeInversionDepth: new ThicknessTilesI(5), groundLevelBias: Percent.FromRaw(-50000), turbulenceParams: new NoiseTurbulenceParams(5, Percent.FromRaw(192000), Percent.FromRaw(50000)), steppedNoiseParams: new SteppedNoiseParams(Fix32.FromRaw(0), Fix32.FromRaw(0)), isRidged: true, replacePreviousResource: true, sigmoidCenterDistance: Fix32.FromRaw(0), sigmoidSmoothness: Fix32.FromRaw(0), surfaceCoverResourceProto: Option<TerrainMaterialProto>.None, surfaceCoverThickness: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(0), Fix32.FromRaw(0)), coordWarpNoiseParams: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(5120), Fix32.FromRaw(51200)), heightBiasAtFromPoint: new ThicknessTilesF(Fix32.FromRaw(0)), heightBiasAtToPoint: new ThicknessTilesF(Fix32.FromRaw(0))), (ITerrainResourceGenerator) new LineBlobTerrainResourceGenerator(new Tile2i(1340, 1258), new Tile2i(1352, 1372), this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Rock), new RelTile1i(1), new RelTile1i(100), new SimplexNoise2dParams(Fix32.FromRaw(81920), Fix32.FromRaw(20480), Fix32.FromRaw(143360)), new SimplexNoise2dSeed(Fix32.FromRaw(474), Fix32.FromRaw(375)), new ThicknessTilesI(30), -1, Percent.FromRaw(0), belowSurfaceExtraHeight: Percent.FromRaw(100000), shapeInversionDepth: new ThicknessTilesI(5), groundLevelBias: Percent.FromRaw(-20000), turbulenceParams: new NoiseTurbulenceParams(5, Percent.FromRaw(192000), Percent.FromRaw(50000)), steppedNoiseParams: new SteppedNoiseParams(Fix32.FromRaw(0), Fix32.FromRaw(0)), isRidged: true, replacePreviousResource: true, sigmoidCenterDistance: Fix32.FromRaw(0), sigmoidSmoothness: Fix32.FromRaw(0), surfaceCoverResourceProto: Option<TerrainMaterialProto>.None, surfaceCoverThickness: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(0), Fix32.FromRaw(0)), coordWarpNoiseParams: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(5120), Fix32.FromRaw(51200)), heightBiasAtFromPoint: new ThicknessTilesF(Fix32.FromRaw(0)), heightBiasAtToPoint: new ThicknessTilesF(Fix32.FromRaw(0))), (ITerrainResourceGenerator) new LineBlobTerrainResourceGenerator(new Tile2i(1137, 1064), new Tile2i(898, 1244), this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Rock), new RelTile1i(1), new RelTile1i(120), new SimplexNoise2dParams(Fix32.FromRaw(71680), Fix32.FromRaw(20480), Fix32.FromRaw(112640)), new SimplexNoise2dSeed(Fix32.FromRaw(468), Fix32.FromRaw(663)), new ThicknessTilesI(30), -1, Percent.FromRaw(0), belowSurfaceExtraHeight: Percent.FromRaw(100000), shapeInversionDepth: new ThicknessTilesI(5), groundLevelBias: Percent.FromRaw(-50000), turbulenceParams: new NoiseTurbulenceParams(5, Percent.FromRaw(192000), Percent.FromRaw(50000)), steppedNoiseParams: new SteppedNoiseParams(Fix32.FromRaw(0), Fix32.FromRaw(0)), isRidged: true, replacePreviousResource: true, sigmoidCenterDistance: Fix32.FromRaw(0), sigmoidSmoothness: Fix32.FromRaw(0), surfaceCoverResourceProto: Option<TerrainMaterialProto>.None, surfaceCoverThickness: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(0), Fix32.FromRaw(0)), coordWarpNoiseParams: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(5120), Fix32.FromRaw(51200)), heightBiasAtFromPoint: new ThicknessTilesF(Fix32.FromRaw(0)), heightBiasAtToPoint: new ThicknessTilesF(Fix32.FromRaw(-5120))), (ITerrainResourceGenerator) new LineBlobTerrainResourceGenerator(new Tile2i(1051, 1487), new Tile2i(1133, 1554), this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Rock), new RelTile1i(1), new RelTile1i(100), new SimplexNoise2dParams(Fix32.FromRaw(71680), Fix32.FromRaw(20480), Fix32.FromRaw(112640)), new SimplexNoise2dSeed(Fix32.FromRaw(474), Fix32.FromRaw(375)), new ThicknessTilesI(30), -1, Percent.FromRaw(0), belowSurfaceExtraHeight: Percent.FromRaw(100000), shapeInversionDepth: new ThicknessTilesI(5), groundLevelBias: Percent.FromRaw(-50000), turbulenceParams: new NoiseTurbulenceParams(5, Percent.FromRaw(192000), Percent.FromRaw(50000)), steppedNoiseParams: new SteppedNoiseParams(Fix32.FromRaw(0), Fix32.FromRaw(0)), isRidged: true, replacePreviousResource: true, sigmoidCenterDistance: Fix32.FromRaw(0), sigmoidSmoothness: Fix32.FromRaw(0), surfaceCoverResourceProto: Option<TerrainMaterialProto>.None, surfaceCoverThickness: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(0), Fix32.FromRaw(0)), coordWarpNoiseParams: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(5120), Fix32.FromRaw(51200)), heightBiasAtFromPoint: new ThicknessTilesF(Fix32.FromRaw(0)), heightBiasAtToPoint: new ThicknessTilesF(Fix32.FromRaw(0))), (ITerrainResourceGenerator) new LineBlobTerrainResourceGenerator(new Tile2i(1783, 1474), new Tile2i(1587, 1633), this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Coal), new RelTile1i(20), new RelTile1i(50), new SimplexNoise2dParams(Fix32.FromRaw(10240), Fix32.FromRaw(6144), Fix32.FromRaw(153600)), new SimplexNoise2dSeed(Fix32.FromRaw(754), Fix32.FromRaw(437)), new ThicknessTilesI(60), extraFalloffTransitionRadius: Percent.FromRaw(0), belowSurfaceExtraHeight: Percent.FromRaw(300000), shapeInversionDepth: new ThicknessTilesI(5), groundLevelBias: Percent.FromRaw(-50000), turbulenceParams: new NoiseTurbulenceParams(2, Percent.FromRaw(192000), Percent.FromRaw(50000)), steppedNoiseParams: new SteppedNoiseParams(Fix32.FromRaw(3072), Fix32.FromRaw(10240)), replacePreviousResource: true, sigmoidCenterDistance: Fix32.FromRaw(0), sigmoidSmoothness: Fix32.FromRaw(0), surfaceCoverResourceProto: Option<TerrainMaterialProto>.None, surfaceCoverThickness: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(0), Fix32.FromRaw(0)), useMineableResourceConfig: true, coordWarpNoiseParams: new SimplexNoise2dParams(Fix32.FromRaw(1024), Fix32.FromRaw(2048), Fix32.FromRaw(20480)), heightBiasAtFromPoint: new ThicknessTilesF(Fix32.FromRaw(-15360)), heightBiasAtToPoint: new ThicknessTilesF(Fix32.FromRaw(0))), (ITerrainResourceGenerator) new LineBlobTerrainResourceGenerator(new Tile2i(1041, 688), new Tile2i(1428, 763), this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Sand), new RelTile1i(30), new RelTile1i(200), new SimplexNoise2dParams(Fix32.FromRaw(47104), Fix32.FromRaw(3072), Fix32.FromRaw(102400)), new SimplexNoise2dSeed(Fix32.FromRaw(198), Fix32.FromRaw(852)), new ThicknessTilesI(50), extraFalloffTransitionRadius: Percent.FromRaw(0), transitionFn: LineTransitionFn.Sine, belowSurfaceExtraHeight: Percent.FromRaw(0), shapeInversionDepth: new ThicknessTilesI(50), groundLevelBias: Percent.FromRaw(0), turbulenceParams: new NoiseTurbulenceParams(2, Percent.FromRaw(170000), Percent.FromRaw(70000)), steppedNoiseParams: new SteppedNoiseParams(Fix32.FromRaw(0), Fix32.FromRaw(0)), onlyPlaceOnTopAboveGround: true, sigmoidCenterDistance: Fix32.FromRaw(0), sigmoidSmoothness: Fix32.FromRaw(0), surfaceCoverResourceProto: Option<TerrainMaterialProto>.None, surfaceCoverThickness: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(0), Fix32.FromRaw(0)), coordWarpNoiseParams: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(0), Fix32.FromRaw(0)), heightBiasAtFromPoint: new ThicknessTilesF(Fix32.FromRaw(-20480)), heightBiasAtToPoint: new ThicknessTilesF(Fix32.FromRaw(-25600))), (ITerrainResourceGenerator) new LineBlobTerrainResourceGenerator(new Tile2i(843, 1818), new Tile2i(753, 1556), this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Rock), new RelTile1i(30), new RelTile1i(50), new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(20480), Fix32.FromRaw(122880)), new SimplexNoise2dSeed(Fix32.FromRaw(581), Fix32.FromRaw(672)), new ThicknessTilesI(60), extraFalloffTransitionRadius: Percent.FromRaw(150000), belowSurfaceExtraHeight: Percent.FromRaw(0), shapeInversionDepth: new ThicknessTilesI(60), groundLevelBias: Percent.FromRaw(10000), turbulenceParams: new NoiseTurbulenceParams(4, Percent.FromRaw(192000), Percent.FromRaw(70000)), steppedNoiseParams: new SteppedNoiseParams(Fix32.FromRaw(0), Fix32.FromRaw(0)), isRidged: true, replacePreviousResource: true, sigmoidCenterDistance: Fix32.FromRaw(0), sigmoidSmoothness: Fix32.FromRaw(0), surfaceCoverResourceProto: Option<TerrainMaterialProto>.None, surfaceCoverThickness: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(0), Fix32.FromRaw(0)), coordWarpNoiseParams: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(0), Fix32.FromRaw(0)), heightBiasAtFromPoint: new ThicknessTilesF(Fix32.FromRaw(0)), heightBiasAtToPoint: new ThicknessTilesF(Fix32.FromRaw(0))), (ITerrainResourceGenerator) new LineBlobTerrainResourceGenerator(new Tile2i(1325, 1232), new Tile2i(1148, 1071), this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.CopperOre), new RelTile1i(10), new RelTile1i(90), new SimplexNoise2dParams(Fix32.FromRaw(61440), Fix32.FromRaw(20480), Fix32.FromRaw(133120)), new SimplexNoise2dSeed(Fix32.FromRaw(473), Fix32.FromRaw(760)), new ThicknessTilesI(60), extraFalloffTransitionRadius: Percent.FromRaw(0), belowSurfaceExtraHeight: Percent.FromRaw(100000), shapeInversionDepth: new ThicknessTilesI(20), groundLevelBias: Percent.FromRaw(0), turbulenceParams: new NoiseTurbulenceParams(5, Percent.FromRaw(192000), Percent.FromRaw(50000)), steppedNoiseParams: new SteppedNoiseParams(Fix32.FromRaw(0), Fix32.FromRaw(0)), isRidged: true, replacePreviousResource: true, sigmoidCenterDistance: Fix32.FromRaw(0), sigmoidSmoothness: Fix32.FromRaw(0), surfaceCoverResourceProto: Option<TerrainMaterialProto>.Some(this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Rock)), surfaceCoverThickness: new SimplexNoise2dParams(Fix32.FromRaw(512), Fix32.FromRaw(512), Fix32.FromRaw(40960)), useMineableResourceConfig: true, coordWarpNoiseParams: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(5120), Fix32.FromRaw(51200)), heightBiasAtFromPoint: new ThicknessTilesF(Fix32.FromRaw(0)), heightBiasAtToPoint: new ThicknessTilesF(Fix32.FromRaw(10240))), (ITerrainResourceGenerator) new LineBlobTerrainResourceGenerator(new Tile2i(740, 1181), new Tile2i(669, 830), this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Sand), new RelTile1i(30), new RelTile1i(180), new SimplexNoise2dParams(Fix32.FromRaw(34816), Fix32.FromRaw(3072), Fix32.FromRaw(102400)), new SimplexNoise2dSeed(Fix32.FromRaw(623), Fix32.FromRaw(703)), new ThicknessTilesI(50), extraFalloffTransitionRadius: Percent.FromRaw(0), transitionFn: LineTransitionFn.Sine, belowSurfaceExtraHeight: Percent.FromRaw(0), shapeInversionDepth: new ThicknessTilesI(50), groundLevelBias: Percent.FromRaw(0), turbulenceParams: new NoiseTurbulenceParams(2, Percent.FromRaw(170000), Percent.FromRaw(70000)), steppedNoiseParams: new SteppedNoiseParams(Fix32.FromRaw(0), Fix32.FromRaw(0)), onlyPlaceOnTopAboveGround: true, sigmoidCenterDistance: Fix32.FromRaw(0), sigmoidSmoothness: Fix32.FromRaw(0), surfaceCoverResourceProto: Option<TerrainMaterialProto>.None, surfaceCoverThickness: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(0), Fix32.FromRaw(0)), coordWarpNoiseParams: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(0), Fix32.FromRaw(0)), heightBiasAtFromPoint: new ThicknessTilesF(Fix32.FromRaw(-20480)), heightBiasAtToPoint: new ThicknessTilesF(Fix32.FromRaw(-20480))), (ITerrainResourceGenerator) new LineBlobTerrainResourceGenerator(new Tile2i(945, 1226), new Tile2i(1015, 1354), this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Coal), new RelTile1i(20), new RelTile1i(20), new SimplexNoise2dParams(Fix32.FromRaw(2048), Fix32.FromRaw(5120), Fix32.FromRaw(153600)), new SimplexNoise2dSeed(Fix32.FromRaw(187), Fix32.FromRaw(404)), new ThicknessTilesI(20), extraFalloffTransitionRadius: Percent.FromRaw(0), belowSurfaceExtraHeight: Percent.FromRaw(200000), shapeInversionDepth: new ThicknessTilesI(5), groundLevelBias: Percent.FromRaw(20000), turbulenceParams: new NoiseTurbulenceParams(2, Percent.FromRaw(192000), Percent.FromRaw(50000)), steppedNoiseParams: new SteppedNoiseParams(Fix32.FromRaw(3072), Fix32.FromRaw(10240)), replacePreviousResource: true, sigmoidCenterDistance: Fix32.FromRaw(0), sigmoidSmoothness: Fix32.FromRaw(0), surfaceCoverResourceProto: Option<TerrainMaterialProto>.None, surfaceCoverThickness: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(0), Fix32.FromRaw(0)), useMineableResourceConfig: true, coordWarpNoiseParams: new SimplexNoise2dParams(Fix32.FromRaw(1024), Fix32.FromRaw(2048), Fix32.FromRaw(20480)), heightBiasAtFromPoint: new ThicknessTilesF(Fix32.FromRaw(0)), heightBiasAtToPoint: new ThicknessTilesF(Fix32.FromRaw(0))), (ITerrainResourceGenerator) new LineBlobTerrainResourceGenerator(new Tile2i(1001, 689), new Tile2i(801, 773), this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Sand), new RelTile1i(30), new RelTile1i(200), new SimplexNoise2dParams(Fix32.FromRaw(45056), Fix32.FromRaw(3072), Fix32.FromRaw(102400)), new SimplexNoise2dSeed(Fix32.FromRaw(198), Fix32.FromRaw(852)), new ThicknessTilesI(40), extraFalloffTransitionRadius: Percent.FromRaw(0), transitionFn: LineTransitionFn.Sine, belowSurfaceExtraHeight: Percent.FromRaw(0), shapeInversionDepth: new ThicknessTilesI(40), groundLevelBias: Percent.FromRaw(0), turbulenceParams: new NoiseTurbulenceParams(2, Percent.FromRaw(170000), Percent.FromRaw(70000)), steppedNoiseParams: new SteppedNoiseParams(Fix32.FromRaw(0), Fix32.FromRaw(0)), onlyPlaceOnTopAboveGround: true, sigmoidCenterDistance: Fix32.FromRaw(0), sigmoidSmoothness: Fix32.FromRaw(0), surfaceCoverResourceProto: Option<TerrainMaterialProto>.None, surfaceCoverThickness: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(0), Fix32.FromRaw(0)), coordWarpNoiseParams: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(0), Fix32.FromRaw(0)), heightBiasAtFromPoint: new ThicknessTilesF(Fix32.FromRaw(-20480)), heightBiasAtToPoint: new ThicknessTilesF(Fix32.FromRaw(-20480))), (ITerrainResourceGenerator) new LineBlobTerrainResourceGenerator(new Tile2i(904, 792), new Tile2i(872, 714), this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Sand), new RelTile1i(30), new RelTile1i(40), new SimplexNoise2dParams(Fix32.FromRaw(10240), Fix32.FromRaw(3072), Fix32.FromRaw(102400)), new SimplexNoise2dSeed(Fix32.FromRaw(198), Fix32.FromRaw(852)), new ThicknessTilesI(2), extraFalloffTransitionRadius: Percent.FromRaw(0), transitionFn: LineTransitionFn.Sine, belowSurfaceExtraHeight: Percent.FromRaw(0), shapeInversionDepth: new ThicknessTilesI(2), groundLevelBias: Percent.FromRaw(600000), turbulenceParams: new NoiseTurbulenceParams(2, Percent.FromRaw(170000), Percent.FromRaw(70000)), steppedNoiseParams: new SteppedNoiseParams(Fix32.FromRaw(0), Fix32.FromRaw(0)), sigmoidCenterDistance: Fix32.FromRaw(0), sigmoidSmoothness: Fix32.FromRaw(0), surfaceCoverResourceProto: Option<TerrainMaterialProto>.None, surfaceCoverThickness: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(0), Fix32.FromRaw(0)), coordWarpNoiseParams: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(0), Fix32.FromRaw(0)), heightBiasAtFromPoint: new ThicknessTilesF(Fix32.FromRaw(0)), heightBiasAtToPoint: new ThicknessTilesF(Fix32.FromRaw(-5120))), (ITerrainResourceGenerator) new LineBlobTerrainResourceGenerator(new Tile2i(734, 860), new Tile2i(819, 1143), this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Limestone), new RelTile1i(1), new RelTile1i(120), new SimplexNoise2dParams(Fix32.FromRaw(61440), Fix32.FromRaw(20480), Fix32.FromRaw(143360)), new SimplexNoise2dSeed(Fix32.FromRaw(786), Fix32.FromRaw(530)), new ThicknessTilesI(20), extraFalloffTransitionRadius: Percent.FromRaw(0), belowSurfaceExtraHeight: Percent.FromRaw(100000), shapeInversionDepth: new ThicknessTilesI(5), groundLevelBias: Percent.FromRaw(50000), turbulenceParams: new NoiseTurbulenceParams(5, Percent.FromRaw(192000), Percent.FromRaw(50000)), steppedNoiseParams: new SteppedNoiseParams(Fix32.FromRaw(0), Fix32.FromRaw(0)), isRidged: true, replacePreviousResource: true, sigmoidCenterDistance: Fix32.FromRaw(0), sigmoidSmoothness: Fix32.FromRaw(0), surfaceCoverResourceProto: Option<TerrainMaterialProto>.None, surfaceCoverThickness: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(0), Fix32.FromRaw(0)), useMineableResourceConfig: true, coordWarpNoiseParams: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(5120), Fix32.FromRaw(51200)), heightBiasAtFromPoint: new ThicknessTilesF(Fix32.FromRaw(0)), heightBiasAtToPoint: new ThicknessTilesF(Fix32.FromRaw(0))), (ITerrainResourceGenerator) new LineBlobTerrainResourceGenerator(new Tile2i(1352, 1395), new Tile2i(1165, 1524), this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.IronOre), new RelTile1i(10), new RelTile1i(80), new SimplexNoise2dParams(Fix32.FromRaw(56320), Fix32.FromRaw(20480), Fix32.FromRaw(133120)), new SimplexNoise2dSeed(Fix32.FromRaw(474), Fix32.FromRaw(375)), new ThicknessTilesI(60), extraFalloffTransitionRadius: Percent.FromRaw(0), belowSurfaceExtraHeight: Percent.FromRaw(100000), shapeInversionDepth: new ThicknessTilesI(20), groundLevelBias: Percent.FromRaw(0), turbulenceParams: new NoiseTurbulenceParams(5, Percent.FromRaw(192000), Percent.FromRaw(50000)), steppedNoiseParams: new SteppedNoiseParams(Fix32.FromRaw(0), Fix32.FromRaw(0)), isRidged: true, replacePreviousResource: true, sigmoidCenterDistance: Fix32.FromRaw(0), sigmoidSmoothness: Fix32.FromRaw(0), surfaceCoverResourceProto: Option<TerrainMaterialProto>.Some(this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Rock)), surfaceCoverThickness: new SimplexNoise2dParams(Fix32.FromRaw(512), Fix32.FromRaw(512), Fix32.FromRaw(40960)), useMineableResourceConfig: true, coordWarpNoiseParams: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(5120), Fix32.FromRaw(51200)), heightBiasAtFromPoint: new ThicknessTilesF(Fix32.FromRaw(0)), heightBiasAtToPoint: new ThicknessTilesF(Fix32.FromRaw(10240))), (ITerrainResourceGenerator) new LineBlobTerrainResourceGenerator(new Tile2i(974, 1862), new Tile2i(1164, 1858), this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Rock), new RelTile1i(1), new RelTile1i(160), new SimplexNoise2dParams(Fix32.FromRaw(92160), Fix32.FromRaw(20480), Fix32.FromRaw(143360)), new SimplexNoise2dSeed(Fix32.FromRaw(474), Fix32.FromRaw(375)), new ThicknessTilesI(30), extraFalloffTransitionRadius: Percent.FromRaw(30000), belowSurfaceExtraHeight: Percent.FromRaw(100000), shapeInversionDepth: new ThicknessTilesI(50), groundLevelBias: Percent.FromRaw(-50000), turbulenceParams: new NoiseTurbulenceParams(5, Percent.FromRaw(192000), Percent.FromRaw(50000)), steppedNoiseParams: new SteppedNoiseParams(Fix32.FromRaw(0), Fix32.FromRaw(0)), isRidged: true, onlyPlaceOnTopAboveGround: true, sigmoidCenterDistance: Fix32.FromRaw(0), sigmoidSmoothness: Fix32.FromRaw(0), surfaceCoverResourceProto: Option<TerrainMaterialProto>.None, surfaceCoverThickness: new SimplexNoise2dParams(Fix32.FromRaw(512), Fix32.FromRaw(512), Fix32.FromRaw(40960)), useMineableResourceConfig: true, coordWarpNoiseParams: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(5120), Fix32.FromRaw(51200)), heightBiasAtFromPoint: new ThicknessTilesF(Fix32.FromRaw(0)), heightBiasAtToPoint: new ThicknessTilesF(Fix32.FromRaw(-10240))), (ITerrainResourceGenerator) new LineBlobTerrainResourceGenerator(new Tile2i(1218, 1862), new Tile2i(1406, 1858), this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.GoldOre), new RelTile1i(1), new RelTile1i(160), new SimplexNoise2dParams(Fix32.FromRaw(92160), Fix32.FromRaw(20480), Fix32.FromRaw(143360)), new SimplexNoise2dSeed(Fix32.FromRaw(474), Fix32.FromRaw(375)), new ThicknessTilesI(30), 1, Percent.FromRaw(30000), belowSurfaceExtraHeight: Percent.FromRaw(100000), shapeInversionDepth: new ThicknessTilesI(50), groundLevelBias: Percent.FromRaw(-50000), turbulenceParams: new NoiseTurbulenceParams(5, Percent.FromRaw(192000), Percent.FromRaw(50000)), steppedNoiseParams: new SteppedNoiseParams(Fix32.FromRaw(0), Fix32.FromRaw(0)), isRidged: true, replacePreviousResource: true, sigmoidCenterDistance: Fix32.FromRaw(0), sigmoidSmoothness: Fix32.FromRaw(0), surfaceCoverResourceProto: Option<TerrainMaterialProto>.Some(this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Rock)), surfaceCoverThickness: new SimplexNoise2dParams(Fix32.FromRaw(512), Fix32.FromRaw(512), Fix32.FromRaw(40960)), useMineableResourceConfig: true, coordWarpNoiseParams: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(5120), Fix32.FromRaw(51200)), heightBiasAtFromPoint: new ThicknessTilesF(Fix32.FromRaw(-3072)), heightBiasAtToPoint: new ThicknessTilesF(Fix32.FromRaw(-20480))), (ITerrainResourceGenerator) new LineBlobTerrainResourceGenerator(new Tile2i(1050, 1496), new Tile2i(829, 1567), this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Rock), new RelTile1i(1), new RelTile1i(100), new SimplexNoise2dParams(Fix32.FromRaw(71680), Fix32.FromRaw(20480), Fix32.FromRaw(143360)), new SimplexNoise2dSeed(Fix32.FromRaw(474), Fix32.FromRaw(375)), new ThicknessTilesI(30), 1, Percent.FromRaw(0), belowSurfaceExtraHeight: Percent.FromRaw(100000), shapeInversionDepth: new ThicknessTilesI(5), groundLevelBias: Percent.FromRaw(-50000), turbulenceParams: new NoiseTurbulenceParams(5, Percent.FromRaw(192000), Percent.FromRaw(50000)), steppedNoiseParams: new SteppedNoiseParams(Fix32.FromRaw(0), Fix32.FromRaw(0)), isRidged: true, replacePreviousResource: true, sigmoidCenterDistance: Fix32.FromRaw(0), sigmoidSmoothness: Fix32.FromRaw(0), surfaceCoverResourceProto: Option<TerrainMaterialProto>.None, surfaceCoverThickness: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(0), Fix32.FromRaw(0)), coordWarpNoiseParams: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(5120), Fix32.FromRaw(51200)), heightBiasAtFromPoint: new ThicknessTilesF(Fix32.FromRaw(0)), heightBiasAtToPoint: new ThicknessTilesF(Fix32.FromRaw(0))), (ITerrainResourceGenerator) new LineBlobTerrainResourceGenerator(new Tile2i(936, 1836), new Tile2i(818, 1583), this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Quartz), new RelTile1i(1), new RelTile1i(120), new SimplexNoise2dParams(Fix32.FromRaw(81920), Fix32.FromRaw(20480), Fix32.FromRaw(133120)), new SimplexNoise2dSeed(Fix32.FromRaw(474), Fix32.FromRaw(375)), new ThicknessTilesI(30), 1, Percent.FromRaw(0), belowSurfaceExtraHeight: Percent.FromRaw(100000), shapeInversionDepth: new ThicknessTilesI(5), groundLevelBias: Percent.FromRaw(-50000), turbulenceParams: new NoiseTurbulenceParams(5, Percent.FromRaw(192000), Percent.FromRaw(50000)), steppedNoiseParams: new SteppedNoiseParams(Fix32.FromRaw(0), Fix32.FromRaw(0)), isRidged: true, replacePreviousResource: true, sigmoidCenterDistance: Fix32.FromRaw(0), sigmoidSmoothness: Fix32.FromRaw(0), surfaceCoverResourceProto: Option<TerrainMaterialProto>.Some(this.m_protosDb.GetOrThrow<TerrainMaterialProto>(Ids.TerrainMaterials.Rock)), surfaceCoverThickness: new SimplexNoise2dParams(Fix32.FromRaw(512), Fix32.FromRaw(512), Fix32.FromRaw(40960)), useMineableResourceConfig: true, coordWarpNoiseParams: new SimplexNoise2dParams(Fix32.FromRaw(0), Fix32.FromRaw(5120), Fix32.FromRaw(51200)), heightBiasAtFromPoint: new ThicknessTilesF(Fix32.FromRaw(0)), heightBiasAtToPoint: new ThicknessTilesF(Fix32.FromRaw(0))), (ITerrainResourceGenerator) new TreesResourceGenerator(new Tile2i(1012, 1342), new Tile2i(1154, 1335), 0, this.m_protosDb.GetOrThrow<ForestProto>(Ids.Forests.ConiferForest), new RelTile1i(100), new RelTile1i(100), Fix32.FromRaw(4096), new SimplexNoise2dParams(Fix32.FromRaw(5120), Fix32.FromRaw(4096), Fix32.FromRaw(122880)), Fix32.FromRaw(3072), Fix32.FromRaw(8192), new SimplexNoise2dSeed(Fix32.FromRaw(813), Fix32.FromRaw(116)), false, Option<TerrainMaterialProto>.None), (ITerrainResourceGenerator) new TreesResourceGenerator(new Tile2i(987, 1622), new Tile2i(1333, 1685), 0, this.m_protosDb.GetOrThrow<ForestProto>(Ids.Forests.ConiferForest), new RelTile1i(150), new RelTile1i(80), Fix32.FromRaw(4096), new SimplexNoise2dParams(Fix32.FromRaw(6144), Fix32.FromRaw(4096), Fix32.FromRaw(122880)), Fix32.FromRaw(3072), Fix32.FromRaw(8192), new SimplexNoise2dSeed(Fix32.FromRaw(813), Fix32.FromRaw(116)), false, Option<TerrainMaterialProto>.None), (ITerrainResourceGenerator) new TreesResourceGenerator(new Tile2i(1320, 947), new Tile2i(951, 954), 0, this.m_protosDb.GetOrThrow<ForestProto>(Ids.Forests.ConiferForest), new RelTile1i(150), new RelTile1i(150), Fix32.FromRaw(4096), new SimplexNoise2dParams(Fix32.FromRaw(6144), Fix32.FromRaw(4096), Fix32.FromRaw(153600)), Fix32.FromRaw(3072), Fix32.FromRaw(8192), new SimplexNoise2dSeed(Fix32.FromRaw(813), Fix32.FromRaw(116)), true, Option<TerrainMaterialProto>.None), (ITerrainResourceGenerator) new TreesResourceGenerator(new Tile2i(1679, 1107), new Tile2i(1576, 1546), 0, this.m_protosDb.GetOrThrow<ForestProto>(Ids.Forests.ConiferForest), new RelTile1i(150), new RelTile1i(150), Fix32.FromRaw(4096), new SimplexNoise2dParams(Fix32.FromRaw(7168), Fix32.FromRaw(4096), Fix32.FromRaw(184320)), Fix32.FromRaw(3072), Fix32.FromRaw(8192), new SimplexNoise2dSeed(Fix32.FromRaw(813), Fix32.FromRaw(116)), false, Option<TerrainMaterialProto>.None));
    }

    private ImmutableArray<IVirtualTerrainResource> createVirtualResources()
    {
      return ImmutableArray.Create<IVirtualTerrainResource>((IVirtualTerrainResource) new SimpleVirtualResource(this.m_protosDb.GetOrThrow<VirtualResourceProductProto>(IdsCore.Products.VirtualCrudeOil), new Quantity(50000), new Tile3i(1230, 1330, 0), new RelTile1i(14)), (IVirtualTerrainResource) new SimpleVirtualResource(this.m_protosDb.GetOrThrow<VirtualResourceProductProto>(IdsCore.Products.Groundwater), new Quantity(24000), new Tile3i(957, 972, 0), new RelTile1i(100)), (IVirtualTerrainResource) new SimpleVirtualResource(this.m_protosDb.GetOrThrow<VirtualResourceProductProto>(IdsCore.Products.Groundwater), new Quantity(24000), new Tile3i(1042, 1252, 0), new RelTile1i(60)), (IVirtualTerrainResource) new SimpleVirtualResource(this.m_protosDb.GetOrThrow<VirtualResourceProductProto>(IdsCore.Products.Groundwater), new Quantity(21000), new Tile3i(982, 1672, 0), new RelTile1i(90)), (IVirtualTerrainResource) new SimpleVirtualResource(this.m_protosDb.GetOrThrow<VirtualResourceProductProto>(IdsCore.Products.Groundwater), new Quantity(30000), new Tile3i(1632, 1047, 0), new RelTile1i(100)), (IVirtualTerrainResource) new SimpleVirtualResource(this.m_protosDb.GetOrThrow<VirtualResourceProductProto>(IdsCore.Products.VirtualCrudeOil), new Quantity(50000), new Tile3i(1400, 720, 0), new RelTile1i(14)));
    }

    private ImmutableArray<ITerrainPostProcessor> createPostProcessors()
    {
      return ImmutableArray.Create<ITerrainPostProcessor>((ITerrainPostProcessor) new SmoothTerrainPostProcessor(), (ITerrainPostProcessor) new GrassOnRocksTerrainPostProcessor(), (ITerrainPostProcessor) new MixedGrassTerrainPostProcessor(), (ITerrainPostProcessor) new ForestFloorTerrainPostProcessor(), (ITerrainPostProcessor) new FlowersTerrainPostProcessor(), (ITerrainPostProcessor) new ExplicitMapPropsTerrainPostProcessor(), (ITerrainPostProcessor) new TerrainTexturedPorpsTerrainPostProcessor());
    }

    private ImmutableArray<TerrainPropMapData> getTerrainProps()
    {
      return ImmutableArray<TerrainPropMapData>.Empty;
    }

    private IslandMapConfig createMapConfig()
    {
      return new IslandMapConfig(new RelTile1i(20), new HeightTilesI(-5), new ThicknessTilesF(Fix32.FromRaw(-150)));
    }

    static YouShallNotPassStaticIslandMap()
    {
      MBiHIp97M4MqqbtZOh.chMFXj727();
      YouShallNotPassStaticIslandMap.LocName = Loc.Str("YouShallNotPassStaticIslandMap__name", "You Shall Not Pass", "Map name");
      YouShallNotPassStaticIslandMap.LocDescription = Loc.Str("YouShallNotPassStaticIslandMap__desc", "Prepare for the ultimate challenge on You Shall Not Pass, an experimental map designed to push your skills to the limit! The starting point is a tiny valley with limited space, yet it is abundant in resources. Your task? Ascend to the top plateau before you run out of space (and coal). Once at the top, you are rewarded with a flat area for building a vast factory so you can utilize all the resources available to you.\r\n\r\nWill your excavators win the race against time or will your factory spiral out of control as your resources sputter out? Only the captains with the most robust plans (and trousers) can conquer this island of pain.\r\n\r\nThis map is for experts only.", "Map description");
    }
  }
}
