// Decompiled with JetBrains decompiler
// Type: Mafi.Base.Prototypes.Research.LogisticsResearchData
// Assembly: Mafi.Base, Version=0.6.3.0, Culture=neutral, PublicKeyToken=null
// MVID: 189C759C-DBD6-48EA-AEF6-5D1D80F045F4
// Assembly location: D:\GameLibrary\SteamLibrary\steamapps\common\Captain of Industry\Captain of Industry_Data\Managed\Mafi.Base.dll
// XML documentation location: D:\GameLibrary\SteamLibrary\steamapps\common\Captain of Industry\Captain of Industry_Data\Managed\Mafi.Base.xml

using eLxG93FZl5M3yHxFGb;
using Mafi.Core;
using Mafi.Core.Entities.Static;
using Mafi.Core.Mods;
using Mafi.Core.Prototypes;
using Mafi.Core.Research;
using Mafi.Localization;

#nullable disable
namespace Mafi.Base.Prototypes.Research
{
  internal class LogisticsResearchData : IResearchNodesData, IModData
  {
    public void RegisterData(ProtoRegistrator registrator)
    {
      LocStr1 locStr1 = Loc.Str1(Ids.Research.VehicleCapIncrease.ToString() + "__desc", "Increases vehicle limit by {0}.", "{0}=25");
      int vehicleLimitIncrease = 20;
      LocStr alreadyLocalizedStr = LocalizationManager.CreateAlreadyLocalizedStr(Ids.Research.VehicleCapIncrease.ToString() + "_formatted20", locStr1.Format(vehicleLimitIncrease.ToString()).Value);
      int num = 10;
      LocalizationManager.CreateAlreadyLocalizedStr(Ids.Research.VehicleCapIncrease.ToString() + "_formatted10", locStr1.Format(num.ToString()).Value);
      string iconPath = "Assets/Base/Icons/VehicleLimitIncrease.svg";
      registrator.ResearchNodeProtoBuilder.Start("Vehicles management", Ids.Research.VehicleCapIncrease).Description(alreadyLocalizedStr).BuildAndAdd().MarkAsObsolete();
      registrator.ResearchNodeProtoBuilder.Start("Vehicles management II", Ids.Research.VehicleCapIncrease2).Description(alreadyLocalizedStr).AddVehicleCapIncrease(vehicleLimitIncrease, iconPath).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Trading dock", Ids.Research.TradeDock).UseDescriptionFrom((Proto.ID) Ids.Buildings.TradeDock).AddLayoutEntityToUnlock(Ids.Buildings.TradeDock).AddLayoutEntityToUnlock(Ids.Buildings.StorageUnit).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Cargo depot", Ids.Research.CargoDepot).Description("Enables to automate the transportation process of resources that are outside of the island (crude oil for instance).", "description of a research node in the research tree").AddRequiredProto(Ids.Technology.CargoShip).AddLayoutEntityToUnlock((StaticEntityProto.ID) Ids.Buildings.CargoDepotT1).AddLayoutEntityToUnlock((StaticEntityProto.ID) Ids.Buildings.CargoDepotModuleFluidT1).AddLayoutEntityToUnlock((StaticEntityProto.ID) Ids.Buildings.CargoDepotModuleLooseT1).AddLayoutEntityToUnlock((StaticEntityProto.ID) Ids.Buildings.CargoDepotModuleUnitT1).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Trucks overloading edict", Ids.Research.TrucksCapacityEdict).AddEdictToUnlock(Ids.Edicts.TruckCapacityIncrease).AddEdictToUnlock(Ids.Edicts.TruckCapacityIncreaseT2).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Vehicles management III", Ids.Research.VehicleCapIncrease3).Description(alreadyLocalizedStr).AddVehicleCapIncrease(vehicleLimitIncrease, iconPath).AddLayoutEntityToUnlock(Ids.Buildings.BarrierStraight1).AddLayoutEntityToUnlock(Ids.Buildings.BarrierCorner).AddLayoutEntityToUnlock(Ids.Buildings.BarrierCross).AddLayoutEntityToUnlock(Ids.Buildings.BarrierEnding).AddLayoutEntityToUnlock(Ids.Buildings.BarrierTee).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Vehicles management IV", Ids.Research.VehicleCapIncrease4).Description(alreadyLocalizedStr).AddVehicleCapIncrease(vehicleLimitIncrease, iconPath).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Vehicles management V", Ids.Research.VehicleCapIncrease5).Description(alreadyLocalizedStr).AddVehicleCapIncrease(vehicleLimitIncrease, iconPath).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Vehicles management VI", Ids.Research.VehicleCapIncrease6).Description(alreadyLocalizedStr).AddVehicleCapIncrease(vehicleLimitIncrease, iconPath).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Advanced logistics control", Ids.Research.AdvancedLogisticsControl).Description("Provides extra management of logistics and dumping.", "description of a research node in the research tree").AddTechnologyToUnlock(IdsCore.Technology.CustomRoutes).AddVehicleCapIncrease(vehicleLimitIncrease, iconPath).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Pipes", Ids.Research.PipeTransports).Description("Pipes are great. Imagine hauling all of that with trucks?", "description of a research node in the research tree").AddTransportToUnlock(Ids.Transports.PipeT1).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Pipes II", Ids.Research.PipeTransportsT2).Description("It turns out that if we increase the pipe diameter, it has a higher throughput.", "description of a research node in the research tree").AddTransportToUnlock(Ids.Transports.PipeT2).AddMachineToUnlock(Ids.Machines.SmokeStackLarge).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Pipes III", Ids.Research.PipeTransportsT3).Description("Another increase in the throughput.", "description of a research node in the research tree").AddTransportToUnlock(Ids.Transports.PipeT3).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Storage", Ids.Research.StoragesT1).BuildAndAdd().SetAvailability(false);
      registrator.ResearchNodeProtoBuilder.Start("Storage II", Ids.Research.Storage2).AddLayoutEntityToUnlock(Ids.Buildings.StorageLooseT2).AddLayoutEntityToUnlock(Ids.Buildings.StorageFluidT2).AddLayoutEntityToUnlock(Ids.Buildings.StorageUnitT2).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Storage (Large) I", Ids.Research.Storage3).AddLayoutEntityToUnlock(Ids.Buildings.StorageLooseT3).AddLayoutEntityToUnlock(Ids.Buildings.StorageFluidT3).AddLayoutEntityToUnlock(Ids.Buildings.StorageUnitT3).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Storage (Large) II", Ids.Research.Storage4).AddLayoutEntityToUnlock(Ids.Buildings.StorageLooseT4).AddLayoutEntityToUnlock(Ids.Buildings.StorageFluidT4).AddLayoutEntityToUnlock(Ids.Buildings.StorageUnitT4).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Cargo depot II", Ids.Research.CargoDepot2).AddLayoutEntityToUnlock((StaticEntityProto.ID) Ids.Buildings.CargoDepotT2).AddLayoutEntityToUnlock((StaticEntityProto.ID) Ids.Buildings.CargoDepotModuleFluidT2).AddLayoutEntityToUnlock((StaticEntityProto.ID) Ids.Buildings.CargoDepotModuleLooseT2).AddLayoutEntityToUnlock((StaticEntityProto.ID) Ids.Buildings.CargoDepotModuleUnitT2).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Cargo depot III", Ids.Research.CargoDepot3).AddLayoutEntityToUnlock((StaticEntityProto.ID) Ids.Buildings.CargoDepotT3).AddLayoutEntityToUnlock((StaticEntityProto.ID) Ids.Buildings.CargoDepotModuleFluidT3).AddLayoutEntityToUnlock((StaticEntityProto.ID) Ids.Buildings.CargoDepotModuleLooseT3).AddLayoutEntityToUnlock((StaticEntityProto.ID) Ids.Buildings.CargoDepotModuleUnitT3).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Cargo depot IV", Ids.Research.CargoDepot4).AddLayoutEntityToUnlock((StaticEntityProto.ID) Ids.Buildings.CargoDepotT4).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Fuel station", Ids.Research.FuelStation).Description("Tired of excavators going back and forth to refuel? Build this station and assign it some trucks.", "description of a research node in the research tree").AddLayoutEntityToUnlock(Ids.Buildings.FuelStationT1).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Fuel station II", Ids.Research.FuelStation2).AddLayoutEntityToUnlock(Ids.Buildings.FuelStationT2).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Fuel station III", Ids.Research.FuelStation3).AddLayoutEntityToUnlock(Ids.Buildings.FuelStationT3).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Conveyor belts", Ids.Research.ConveyorBelts).Description("Connects machines directly to provide smooth and continuous operation.", "description of a research node in the research tree").AddTransportToUnlock(Ids.Transports.FlatConveyor).AddTransportToUnlock(Ids.Transports.LooseMaterialConveyor).BuildAndAdd();
      LocStr desc = Loc.Str(Ids.Research.ConveyorBeltsT2.ToString() + "__desc", "Conveyor belts with an increased throughput.", "description of a research that provides advanced conveyor belts");
      registrator.ResearchNodeProtoBuilder.Start("Conveyor belts II", Ids.Research.ConveyorBeltsT2).Description(desc).AddTransportToUnlock(Ids.Transports.FlatConveyorT2).AddTransportToUnlock(Ids.Transports.LooseMaterialConveyorT2).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Conveyor belts III", Ids.Research.ConveyorBeltsT3).Description(desc).AddTransportToUnlock(Ids.Transports.FlatConveyorT3).AddTransportToUnlock(Ids.Transports.LooseMaterialConveyorT3).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Ramp for vehicles", Ids.Research.VehicleRamps).AddLayoutEntityToUnlock(Ids.Buildings.VehicleRamp).AddLayoutEntityToUnlock(Ids.Buildings.VehicleRamp2).AddLayoutEntityToUnlock(Ids.Buildings.VehicleRamp3).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Stacker", Ids.Research.Stacker).AddLayoutEntityToUnlock(Ids.Transports.Stacker).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Transports balancing", Ids.Research.TransportsBalancing).Description("You can already split / merge transports. But this gives you the ability to set input / output priorities and ratios.", "description of a research node in the research tree").AddLayoutEntityToUnlock(IdsCore.Transports.GetZipperIdFor(Ids.IoPortShapes.FlatConveyor)).AddLayoutEntityToUnlock(IdsCore.Transports.GetZipperIdFor(Ids.IoPortShapes.LooseMaterialConveyor)).AddLayoutEntityToUnlock(IdsCore.Transports.GetZipperIdFor(Ids.IoPortShapes.Pipe)).AddLayoutEntityToUnlock(IdsCore.Transports.GetZipperIdFor(Ids.IoPortShapes.MoltenMetalChannel)).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Conveyor lifts", Ids.Research.TransportsLifts).Description("Allows to raise or lower conveyors in a compact footprint.", "description of a research node in the research tree").AddLayoutEntityToUnlock(IdsCore.Transports.GetLiftIdFor(Ids.IoPortShapes.FlatConveyor, 1)).AddLayoutEntityToUnlock(IdsCore.Transports.GetLiftIdFor(Ids.IoPortShapes.FlatConveyor, -6), true).AddLayoutEntityToUnlock(IdsCore.Transports.GetLiftIdFor(Ids.IoPortShapes.FlatConveyor, -5), true).AddLayoutEntityToUnlock(IdsCore.Transports.GetLiftIdFor(Ids.IoPortShapes.FlatConveyor, -4), true).AddLayoutEntityToUnlock(IdsCore.Transports.GetLiftIdFor(Ids.IoPortShapes.FlatConveyor, -3), true).AddLayoutEntityToUnlock(IdsCore.Transports.GetLiftIdFor(Ids.IoPortShapes.FlatConveyor, -2), true).AddLayoutEntityToUnlock(IdsCore.Transports.GetLiftIdFor(Ids.IoPortShapes.FlatConveyor, -1), true).AddLayoutEntityToUnlock(IdsCore.Transports.GetLiftIdFor(Ids.IoPortShapes.FlatConveyor, 2), true).AddLayoutEntityToUnlock(IdsCore.Transports.GetLiftIdFor(Ids.IoPortShapes.FlatConveyor, 3), true).AddLayoutEntityToUnlock(IdsCore.Transports.GetLiftIdFor(Ids.IoPortShapes.FlatConveyor, 4), true).AddLayoutEntityToUnlock(IdsCore.Transports.GetLiftIdFor(Ids.IoPortShapes.FlatConveyor, 5), true).AddLayoutEntityToUnlock(IdsCore.Transports.GetLiftIdFor(Ids.IoPortShapes.FlatConveyor, 6), true).AddLayoutEntityToUnlock(IdsCore.Transports.GetLiftIdFor(Ids.IoPortShapes.LooseMaterialConveyor, 1)).AddLayoutEntityToUnlock(IdsCore.Transports.GetLiftIdFor(Ids.IoPortShapes.LooseMaterialConveyor, -6), true).AddLayoutEntityToUnlock(IdsCore.Transports.GetLiftIdFor(Ids.IoPortShapes.LooseMaterialConveyor, -5), true).AddLayoutEntityToUnlock(IdsCore.Transports.GetLiftIdFor(Ids.IoPortShapes.LooseMaterialConveyor, -4), true).AddLayoutEntityToUnlock(IdsCore.Transports.GetLiftIdFor(Ids.IoPortShapes.LooseMaterialConveyor, -3), true).AddLayoutEntityToUnlock(IdsCore.Transports.GetLiftIdFor(Ids.IoPortShapes.LooseMaterialConveyor, -2), true).AddLayoutEntityToUnlock(IdsCore.Transports.GetLiftIdFor(Ids.IoPortShapes.LooseMaterialConveyor, -1), true).AddLayoutEntityToUnlock(IdsCore.Transports.GetLiftIdFor(Ids.IoPortShapes.LooseMaterialConveyor, 2), true).AddLayoutEntityToUnlock(IdsCore.Transports.GetLiftIdFor(Ids.IoPortShapes.LooseMaterialConveyor, 3), true).AddLayoutEntityToUnlock(IdsCore.Transports.GetLiftIdFor(Ids.IoPortShapes.LooseMaterialConveyor, 4), true).AddLayoutEntityToUnlock(IdsCore.Transports.GetLiftIdFor(Ids.IoPortShapes.LooseMaterialConveyor, 5), true).AddLayoutEntityToUnlock(IdsCore.Transports.GetLiftIdFor(Ids.IoPortShapes.LooseMaterialConveyor, 6), true).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Large vehicles", Ids.Research.VehicleAssembly2).Description("Large vehicles to scale your mining and logistics operations. Their production requires glass which has to be acquired via quick trade from other world settlements until you research how to produce it yourself.", "description of a research node in the research tree").AddLayoutEntityToUnlock(Ids.Buildings.VehiclesDepotT2).AddVehicleToUnlock(Ids.Vehicles.TruckT2.Id).AddVehicleToUnlock(Ids.Vehicles.ExcavatorT2).AddVehicleToUnlock(Ids.Vehicles.TreeHarvesterT2).AddProductIcon(Ids.Products.VehicleParts2).AddRecipeToUnlock(Ids.Recipes.VehicleParts2AssemblyT1).AddRecipeToUnlock(Ids.Recipes.VehicleParts2AssemblyT2, true).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Tree harvester II", Ids.Research.TreeHarvester).Description("", "description of a research node in the research tree").BuildAndAdd().MarkAsObsolete();
      registrator.ResearchNodeProtoBuilder.Start("Hydrogen cell", Ids.Research.HydrogenCell).Description("", "description of a research node in the research tree").AddLayoutEntityToUnlock(Ids.Buildings.FuelStationHydrogenT1).AddVehicleToUnlock(Ids.Vehicles.TruckT2H.Id).AddVehicleToUnlock(Ids.Vehicles.ExcavatorT2H).AddVehicleToUnlock(Ids.Vehicles.TreeHarvesterT2H).AddVehicleToUnlock(Ids.Vehicles.TreePlanterT1H).AddTechnologyToUnlock(Ids.Technology.HydrogenCargoShip).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Mega vehicles", Ids.Research.VehicleAssembly3).Description("", "description of a research node in the research tree").AddLayoutEntityToUnlock(Ids.Buildings.VehiclesDepotT3).AddVehicleToUnlock(Ids.Vehicles.TruckT3Loose.Id).AddVehicleToUnlock(Ids.Vehicles.TruckT3Fluid.Id).AddVehicleToUnlock(Ids.Vehicles.ExcavatorT3).AddProductIcon(Ids.Products.VehicleParts3).AddRecipeToUnlock(Ids.Recipes.VehicleParts3AssemblyT1).AddRecipeToUnlock(Ids.Recipes.VehicleParts3AssemblyT2, true).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Hydrogen mega vehicles", Ids.Research.VehicleAssembly3H).AddRequiredProto((Proto.ID) Ids.Research.HydrogenCell).AddVehicleToUnlock(Ids.Vehicles.TruckT3LooseH.Id).AddVehicleToUnlock(Ids.Vehicles.TruckT3FluidH.Id).AddVehicleToUnlock(Ids.Vehicles.ExcavatorT3H).BuildAndAdd();
      registrator.ResearchNodeProtoBuilder.Start("Smart conveyor routing", Ids.Research.ConveyorRouting).AddLayoutEntityToUnlock(Ids.Transports.FlatConveyorSorter).AddLayoutEntityToUnlock(Ids.Transports.LooseConveyorSorter).BuildAndAdd();
    }

    public LogisticsResearchData()
    {
      MBiHIp97M4MqqbtZOh.chMFXj727();
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }
  }
}
