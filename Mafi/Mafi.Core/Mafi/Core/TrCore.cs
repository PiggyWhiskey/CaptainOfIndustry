// Decompiled with JetBrains decompiler
// Type: Mafi.Core.TrCore
// Assembly: Mafi.Core, Version=0.6.3.0, Culture=neutral, PublicKeyToken=null
// MVID: 2D94E377-7747-46A4-A766-4DF7ABFEBD30
// Assembly location: D:\GameLibrary\SteamLibrary\steamapps\common\Captain of Industry\Captain of Industry_Data\Managed\Mafi.Core.dll
// XML documentation location: D:\GameLibrary\SteamLibrary\steamapps\common\Captain of Industry\Captain of Industry_Data\Managed\Mafi.Core.xml

using eLxG93FZl5M3yHxFGb;
using Mafi.Localization;

#nullable disable
namespace Mafi.Core
{
  public class TrCore
  {
    public static readonly LocStr Unity;
    public static readonly LocStr Unity__Tooltip;
    public static readonly LocStr1 MwSec__Unit;
    public static readonly LocStr1Plural NumberOfDays;
    public static readonly LocStr1Plural NumberOfMonths;
    public static readonly LocStr1Plural NumberOfYears;
    public static readonly LocStr1 AdditionError__NoDeposit;
    public static readonly LocStr2 AdditionError__ThinDeposit;
    public static readonly LocStr1 AdditionError__HasDeposit;
    public static readonly LocStr AdditionError__Unique;
    public static readonly LocStr1 AdditionError__CollisionWith;
    public static readonly LocStr AdditionError__NeedsOcean;
    public static readonly LocStr AdditionError__SomethingInWay;
    public static readonly LocStr AdditionError__OutsideOfMap;
    public static readonly LocStr AdditionError__OceanNotAllowed;
    public static readonly LocStr AdditionError__OceanBlocked;
    public static readonly LocStr1 AdditionError__OceanBlockedBy;
    public static readonly LocStr1Plural AdditionError__OceanBlockedByTerrain;
    public static readonly LocStr AdditionError__NotInSlot;
    public static readonly LocStr AdditionError__NotFarmable;
    public static readonly LocStr AdditionError__NotStable;
    public static readonly LocStr AdditionError__NotFertile;
    public static readonly LocStr AdditionError__NotASurface;
    public static readonly LocStr AdditionError__TooCloseToOtherTree;
    public static readonly LocStr2 AdditionError__InvalidHeight;
    public static readonly LocStr AdditionError__DesignationOverlap;
    public static readonly LocStr AdditionError__TerrainTooLow;
    public static readonly LocStr AdditionError__TerrainTooHigh;
    public static readonly LocStr AdditionWarning__HighLift;
    public static readonly LocStr1 TrAdditionError__Blocked;
    public static readonly LocStr RemovalError__HousingHasModuleAttached;
    public static readonly LocStr RemovalError__NotContiguous;
    public static readonly LocStr RemovalError__ScrapItFirst;
    public static readonly LocStr RemovalError__ShipHasCargo;
    public static readonly LocStr RemovalError__DepotMovingCargo;
    public static readonly LocStr RemovalError__HasProductsStored;
    public static readonly LocStr RemovalError__RemoveModulesFirst;
    public static readonly LocStr RemovalError__CannotRemove;
    public static readonly LocStr RemovalError__HasShipAssigned;
    public static readonly LocStr RemovalError__FarmHasAnimals;
    public static readonly LocStr TrAdditionError__InvalidTransport;
    public static readonly LocStr TrAdditionError__InvalidConnection;
    public static readonly LocStr TrAdditionError__BeingDestroyed;
    public static readonly LocStr TrCutError__ConstructionAlreadyStarted;
    public static readonly LocStr TrAdditionError__NoMiniZipper;
    public static readonly LocStr TrAdditionError__NotFlat;
    public static readonly LocStr TrAdditionError__IncompatiblePortAtStart;
    public static readonly LocStr TrAdditionError__IncompatiblePortAtEnd;
    public static readonly LocStr TrAdditionError__TypesNoMatch;
    public static readonly LocStr TrAdditionError__Loop;
    public static readonly LocStr TrAdditionError__SelfColliding;
    public static readonly LocStr TrAdditionError__IncompatibleDirection;
    public static readonly LocStr TrAdditionError__CannotReverse;
    public static readonly LocStr TrAdditionError__NoPillars;
    public static readonly LocStr TrAdditionError__TerrainCollision;
    public static readonly LocStr1 TrAdditionError__TooCloseToOtherMiniZipper;
    public static readonly LocStr TrAdditionError__InvalidTransportCut;
    public static readonly LocStr TransportTooLong__HowToResolve;
    public static readonly LocStr ManagedArea__EditAction;
    public static readonly LocStr ManagedDesignation__EditAction;
    public static readonly LocStr VehicleRole__TreeHarvesting;
    public static readonly LocStr WorldLocation_Orders__Explore;
    public static readonly LocStr DesignationError__Invalid;
    public static readonly LocStr DesignationWarning__NoTower;
    public static readonly LocStr DesignationWarning__NoForestryTower;
    public static readonly LocStr DesignationWarning__CannotStartMining;
    public static readonly LocStr DesignationWarning__CannotStartDumping;
    public static readonly LocStr DesignationWarning__CannotStartLeveling;
    public static readonly LocStr DesignationWarning__CannotStartForestry;
    public static readonly LocStr DesignationWarning__CannotPlaceDecal;
    public static readonly LocStr2 GameSaveLoad__VersionTooHigh;
    public static readonly LocStr1 GameSaveLoad__VersionTooLow;
    public static readonly LocStr GameInitFail;
    public static readonly LocStr GameInitFail__Mod;
    public static readonly LocStr GameInitFail__OutOrMemory;
    public static readonly LocStr3 GameSaveLoad__MissingMod;
    public static readonly LocStr1 GameSaveLoad__MissingFile;
    public static readonly LocStr2 GameSaveLoad__SaveNotFinishedButSaved;
    public static readonly LocStr2 GameSaveLoad__CannotSaveFile;
    public static readonly LocStr1 GameSaveLoad__ChecksumFail;
    public static readonly LocStr2 GameSaveLoad__CannotSaveFile_Crash;
    public static readonly LocStr GameSaveLoad__CannotLoadFile;
    public static readonly LocStr1 GameSaveLoad__SwitchSteamVersion;
    public static readonly LocStr COIHub;
    public static readonly LocStr MailingList;
    public static readonly LocStr Suggestions;
    public static readonly LocStr ReportIssue;
    public static readonly LocStr Credits;
    public static readonly LocStr Enabled;
    public static readonly LocStr Disabled;
    public static readonly LocStr OptionValStandard;
    public static readonly LocStr1 OptionValIncreased;
    public static readonly LocStr1 OptionValReduced;
    public static readonly LocStr1Plural OptionValMeters;
    public static readonly LocStr OpenCoIHub;
    public static readonly LocStr NewGameWizard__MapSelection;
    public static readonly LocStr NewGameWizard__Difficulty;
    public static readonly LocStr NewGameWizard__Mechanics;
    public static readonly LocStr NewGameWizard__Customization;
    public static readonly LocStr NewGameWizard__GameName;
    public static readonly LocStr NewGameWizard__GameName__InUse;
    public static readonly LocStr1 NewGameWizard__GameName__FailedToWrite;
    public static readonly LocStr NewGameWizard__GameName__InvalidChars;
    public static readonly LocStr NewGameWizard__Launch;
    public static readonly LocStr MapInvalid;
    public static readonly LocStr NewGameWizard__Title;
    public static readonly LocStr Option_Unlimited;
    public static readonly LocStr Tutorials__Title;
    public static readonly LocStr Tutorials__Description;
    public static readonly LocStr1 ChangeHistory__Title;
    public static readonly LocStr ChangeHistory__EmptyLabel;
    public static readonly LocStr ChangeHistory__ConfirmTitle;
    public static readonly LocStr1 ChangeHistory__ConfirmPrompt;
    public static readonly LocStr1 DateYear__Label;
    public static readonly LocStr DifficultySettingsSaved;
    public static readonly LocStr StartingLocationDifficulty_Easy;
    public static readonly LocStr StartingLocationDifficulty_Medium;
    public static readonly LocStr StartingLocationDifficulty_Hard;
    public static readonly LocStr StartingLocationDifficulty_Insane;
    public static readonly LocStr StartingLocationDifficulty__EasyTooltip;
    public static readonly LocStr StartingLocationDifficulty__MediumTooltip;
    public static readonly LocStr StartingLocationDifficulty__HardTooltip;
    public static readonly LocStr StartingLocationDifficulty__InsaneTooltip;
    public static readonly LocStr DifficultyFood__Easy;
    public static readonly LocStr DifficultyFood__Normal;
    public static readonly LocStr DifficultyFood__Hard;
    public static readonly LocStr DifficultyConstruction__Easy;
    public static readonly LocStr DifficultyConstruction__Normal;
    public static readonly LocStr DifficultyConstruction__Hard;
    public static readonly LocStr DifficultyFuel__Easy;
    public static readonly LocStr DifficultyFuel__Normal;
    public static readonly LocStr DifficultyFuel__Hard;
    public static readonly LocStr DifficultyMaintenance__Easy;
    public static readonly LocStr DifficultyMaintenance__Normal;
    public static readonly LocStr DifficultyMaintenance__Hard;
    public static readonly LocStr DifficultyMining__Easy;
    public static readonly LocStr DifficultyMining__Normal;
    public static readonly LocStr DifficultyMining__Hard;
    public static readonly LocStr DifficultyResearch__Easy;
    public static readonly LocStr DifficultyResearch__Normal;
    public static readonly LocStr DifficultyResearch__Hard;
    public static readonly LocStr DifficultyGrowth__Easy;
    public static readonly LocStr DifficultyGrowth__Normal;
    public static readonly LocStr DifficultyGrowth__Hard;
    public static readonly LocStr DifficultyRainfall__Easy;
    public static readonly LocStr DifficultyRainfall__Normal;
    public static readonly LocStr DifficultyRainfall__Hard;
    public static readonly LocStr DifficultyContracts__Easy;
    public static readonly LocStr DifficultyContracts__Normal;
    public static readonly LocStr DifficultyContracts__Hard;
    public static readonly LocStr DifficultyDisease__Easy;
    public static readonly LocStr DifficultyDisease__Normal;
    public static readonly LocStr DifficultyDisease__Hard;
    public static readonly LocStr DifficultyPollution__Easy;
    public static readonly LocStr DifficultyPollution__Normal;
    public static readonly LocStr DifficultyPollution__Hard;
    public static readonly LocStr DifficultyUnity__Easy;
    public static readonly LocStr DifficultyUnity__Normal;
    public static readonly LocStr DifficultyUnity__Hard;
    public static readonly LocStr TradeStatus__CantAfford;
    public static readonly LocStr TradeStatus__NoUnity;
    public static readonly LocStr TradeStatus__SoldOut;
    public static readonly LocStr TradeStatus__NoTradeDock;
    public static readonly LocStr TradeStatus__TradeDockNotOperational;
    public static readonly LocStr TradeStatus__NoSpaceInFarm;
    public static readonly LocStr1 Status_LowReputation;
    public static readonly LocStr Contract__MonthlyCost;
    public static readonly LocStr Contract__ExchangeCost;
    public static readonly LocStr ContractCancelStatus__IsAssigned;
    public static readonly LocStr ContractCancelStatus__ProductNotResearched;
    public static readonly LocStr1 ContractAssignCheck__ModuleNotSupported;
    public static readonly LocStr1 ContractAssignCheck__IncompatibleProduct;
    public static readonly LocStr2 SettlementTitleWithReputation;
    public static readonly LocStr1 ReputationIncreaseTitle;
    public static readonly LocStr2 WorldMineTitleWithLevel;
    public static readonly LocStr PopsToAdoptNotAvailable;
    public static readonly LocStr TradeStatus__Info;
    public static readonly LocStr TradeStatus__Info_Animal;
    public static readonly LocStr TradeStatus__Info_CargoShip;
    public static readonly LocStr TradeOfferDelivered;
    public static readonly LocStr TradeOfferDelivered__Animal;
    public static readonly LocStr TradeOfferDelivered__CargoShip;
    public static readonly LocStr RecyclingEfficiency__Title;
    public static readonly LocStr RecyclingEfficiency__Tooltip;
    public static readonly LocStr OreSorter_AllowedProducts__Title;
    public static readonly LocStr1 OreSorter_AllowedProducts__Tooltip;
    public static readonly LocStr OreSorter_SelectProducts;
    public static readonly LocStr OreSorter_InputTitle;
    public static readonly LocStr1 OreSorter_LimitReached;
    public static readonly LocStr OreSorter_NoSingleLoad__Toggle;
    public static readonly LocStr OreSorter_NoSingleLoad__Tooltip;
    public static readonly LocStr OreSorter_BlockedAlert__Tooltip;
    public static readonly LocStr OreSorter_ProductBlocked__Tooltip;
    public static readonly LocStr OutputPort__Tooltip;
    public static readonly LocStr UpointsCategory__Decorations;
    public static readonly LocStr UpointsCategory__DecorationsLong;
    public static readonly LocStr GameOver__Title;
    public static readonly LocStr GameOver__Message;
    public static readonly LocStr2 StageStr;
    public static readonly LocStr2 EdictReason__HealthLow;
    public static readonly LocStr EdictReason__HousingFull;
    public static readonly LocStr PauseTool;
    public static readonly LocStr PlanningMode;
    public static readonly LocStr Demolish;
    public static readonly LocStr CloneTool;
    public static readonly LocStr UnityTool;
    public static readonly LocStr CopyTool;
    public static readonly LocStr CutTool;
    public static readonly LocStr UpgradeTool;
    public static readonly LocStr PropsRemovalTool;
    public static readonly LocStr ThisVehicleCannotDriveUnderTransports;
    public static readonly LocStr EntityCannotBeReachedDesc;
    public static readonly LocStr1 InvalidImportRouteSuffix;
    public static readonly LocStr1 InvalidExportRouteSuffix;
    public static readonly LocStr StoredProduct__KeepFull;
    public static readonly LocStr StoredProduct__KeepEmpty;
    public static readonly LocStr NoVehicleDepotAvailable;
    public static readonly LocStr CaptainOfficeNotAvailable;
    public static readonly LocStr EdictRequiresAdvancedOffice;
    public static readonly LocStr AssignedTrucksEnforce__Title;
    public static readonly LocStr AssignedTrucksEnforce__Tooltip;
    public static readonly LocStr VehicleJob__InvalidState;
    public static readonly LocStr VehicleJob__SearchingForDesignation;
    public static readonly LocStr VehicleJob__DrivingToGoal;
    public static readonly LocStr VehicleJob__Loading;
    public static readonly LocStr VehicleJob__Unloading;
    public static readonly LocStr VehicleJob__ProcessingSurface;
    public static readonly LocStr VehicleJob__Navigating;
    public static readonly LocStr2 VehicleJob__NavigatingToVia;
    public static readonly LocStr ShipCantVisit__NoCrew;
    public static readonly LocStr ShipCantVisit__NoFuel;
    public static readonly LocStr ShipCantVisit__TooFar;
    public static readonly LocStr CargoShipDepartNow__Action;
    public static readonly LocStr CargoShipDepartNow__Tooltip;
    public static readonly LocStr CargoShipCannotDepartNow__WasRequested;
    public static readonly LocStr CargoShipCannotDepartNow__General;
    public static readonly LocStr TrucksAnalytics__Title;
    public static readonly LocStr LogisticsControl__InputTitle;
    public static readonly LocStr LogisticsControl__InputTooltip;
    public static readonly LocStr LogisticsControl__OutputTitle;
    public static readonly LocStr LogisticsControl__OutputTooltip;
    public static readonly LocStr LogisticsControl__On;
    public static readonly LocStr LogisticsControl__On_InputTooltip;
    public static readonly LocStr LogisticsControl__On_OutputTooltip;
    public static readonly LocStr LogisticsControl__Off;
    public static readonly LocStr LogisticsControl__Off_InputTooltip;
    public static readonly LocStr LogisticsControl__Off_OutputTooltip;
    public static readonly LocStr LogisticsControl__Auto;
    public static readonly LocStr LogisticsControl__Auto_InputTooltip;
    public static readonly LocStr LogisticsControl__Auto_OutputTooltip;
    public static readonly LocStr RuinsRecycle__Action;
    public static readonly LocStr2 RuinsRecycleFormatted__Tooltip;
    public static readonly LocStr ImportRoutesTitle;
    public static readonly LocStr ExportRoutesTitle;
    public static readonly LocStr ShipyardKeepEmpty;
    public static readonly LocStr PartialTrucksToggle;
    public static readonly LocStr PartialTrucksToggle__Tooltip;
    public static readonly LocStr StartRepairs;
    public static readonly LocStr WorldMineProductionLvl__Title;
    public static readonly LocStr WorldMineProductionLvl__Tooltip;
    public static readonly LocStr WorldMap;
    public static readonly LocStr NewFolderTitlePlaceholder;
    public static readonly LocStr NewBlueprintTitlePlaceholder;
    public static readonly LocStr NuclearReactor__DisableBeforeUpgrade;
    public static readonly LocStr NuclearReactor__Overheated;
    public static readonly LocStr NuclearReactor__NotEnoughMaintenance;
    public static readonly LocStr EntityStatus__Broken;
    public static readonly LocStr EntityStatus__ResourceDepleted;
    public static readonly LocStr EntityStatus__LowPower;
    public static readonly LocStr EntityStatus__NoComputing;
    public static readonly LocStr EntityStatus__NeedsFuel;
    public static readonly LocStr1 SpeedReduced__Machine;
    public static readonly LocStr1 SpeedReduced__Vehicle;
    public static readonly LocStr ShipFuelSwitch__Tooltip;
    public static readonly LocStr ShipFuelSwitch__InProgress;
    public static readonly LocStr ShipFuelSwitch__InUse;
    public static readonly LocStr ShipFuelSwitch__ShipBusy;
    public static readonly LocStr ShipFuelSwitch__MissingMaterials;
    public static readonly LocStr Loan_NotAvailable__LowProduction;
    public static readonly LocStr Loan_NotAvailable__MaxLoans;
    public static readonly LocStr1 Loan_NotAvailable__QuantityHigh;
    public static readonly LocStr1 Loan_NotAvailable__QuantityLow;

    public TrCore()
    {
      MBiHIp97M4MqqbtZOh.rMWAw2OR8();
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    static TrCore()
    {
      MBiHIp97M4MqqbtZOh.rMWAw2OR8();
      TrCore.Unity = Loc.Str("Product_Virtual_Upoints__name", nameof (Unity), "abstract points that player gains for taking good care of people and making sure they are well, people unite and pull together, and player gains unity, 'togetherness'");
      TrCore.Unity__Tooltip = Loc.Str(nameof (Unity__Tooltip), "Unity is important to run things such as research labs, oil rigs or edicts. Unity can be increased by providing better services to your settlements or building a better housing. Unity from settlements is generated on monthly basis.", "virtual & abstract currency expressing how people 'pull together' to achieve higher goals");
      TrCore.MwSec__Unit = Loc.Str1(nameof (MwSec__Unit), "{0} MW-seconds", "Power (electric or mechanical) in mega-watt-seconds. Similar unit to kWh (kilo-watt-hour) but larger.");
      TrCore.NumberOfDays = Loc.Str1Plural(nameof (NumberOfDays), "{0} day", "{0} days", "example: '1 day', '2 days'");
      TrCore.NumberOfMonths = Loc.Str1Plural(nameof (NumberOfMonths), "{0} month", "{0} months", "example: '1 month', '2 months'");
      TrCore.NumberOfYears = Loc.Str1Plural(nameof (NumberOfYears), "{0} year", "{0} years", "example: '1 year', '2 years'");
      TrCore.AdditionError__NoDeposit = Loc.Str1(nameof (AdditionError__NoDeposit), "There is no deposit of {0}", "{0} is a name of product, for instance oil pump can't be placed on the ground as there is no deposit of oil");
      TrCore.AdditionError__ThinDeposit = Loc.Str2(nameof (AdditionError__ThinDeposit), "Requires ground deposit with thickness at least: {0}, current thickness: {1}", "shown when player is trying to build a pump on top of a deposit, {0} is a thickness of a deposit required to place it (how deep it has to go), {1} is the current thickness");
      TrCore.AdditionError__HasDeposit = Loc.Str1(nameof (AdditionError__HasDeposit), "Cannot be placed on top of existing deposit ({0})", "{0} is a name of product, for instance injection pump can't be placed on the ground as there is some existing deposit of oil or water");
      TrCore.AdditionError__Unique = Loc.Str(nameof (AdditionError__Unique), "Building is unique and already exists", "could not place a building because it already exists and only one is allowed in the game");
      TrCore.AdditionError__CollisionWith = Loc.Str1(nameof (AdditionError__CollisionWith), "Collision with {0}", "could not place a building / machine as it collides with another one called {0}, example: 'Collision with shipyard'");
      TrCore.AdditionError__NeedsOcean = Loc.Str(nameof (AdditionError__NeedsOcean), "Some part needs to be in the ocean", "could not place a building as some part needs to be in the ocean (e.g. ship depot)");
      TrCore.AdditionError__SomethingInWay = Loc.Str(nameof (AdditionError__SomethingInWay), "Something is in the way", "could not place a building as something was in the way (building, tree)");
      TrCore.AdditionError__OutsideOfMap = Loc.Str(nameof (AdditionError__OutsideOfMap), "Outside of buildable area", "could not place a building as it is outside of buildable area of the game (outside of the map)");
      TrCore.AdditionError__OceanNotAllowed = Loc.Str(nameof (AdditionError__OceanNotAllowed), "Cannot place in the ocean", "could not place a building as it can't be placed in the ocean");
      TrCore.AdditionError__OceanBlocked = Loc.Str(nameof (AdditionError__OceanBlocked), "Ocean access blocked", "could not place a building as it has ocean access blocked");
      TrCore.AdditionError__OceanBlockedBy = Loc.Str1(nameof (AdditionError__OceanBlockedBy), "Ocean access blocked by '{0}' or terrain.", "could not place entity due blocked ocean access by an entity, {0} is entity name");
      TrCore.AdditionError__OceanBlockedByTerrain = Loc.Str1Plural(nameof (AdditionError__OceanBlockedByTerrain), "Ocean access blocked by terrain at {0} location, you might need to repeat the recovery action.", "Ocean access blocked by terrain at {0} locations, you might need to repeat the recovery action.", "could not place entity due blocked ocean access by terrain, {0} a positive integer");
      TrCore.AdditionError__NotInSlot = Loc.Str(nameof (AdditionError__NotInSlot), "Must be placed in a highlighted slot", "could not place a building outside a predefined slot (e.g. shipyard module)");
      TrCore.AdditionError__NotFarmable = Loc.Str(nameof (AdditionError__NotFarmable), "Some ground is not farmable", "could not place a farm as the terrain is not farmable");
      TrCore.AdditionError__NotStable = Loc.Str(nameof (AdditionError__NotStable), "Some ground is not stable", "could not place a building because the terrain is not stable enough (for example landfill)");
      TrCore.AdditionError__NotFertile = Loc.Str(nameof (AdditionError__NotFertile), "Some ground is not fertile", "could not place a tree as the terrain is not fertile");
      TrCore.AdditionError__NotASurface = Loc.Str(nameof (AdditionError__NotASurface), "Requires a hard surface (e.g. concrete)", "could not place a paint / decal as the terrain does not contain a surface that can be painted");
      TrCore.AdditionError__TooCloseToOtherTree = Loc.Str(nameof (AdditionError__TooCloseToOtherTree), "Too close to another tree", "could not place a tree as it is too close to another");
      TrCore.AdditionError__InvalidHeight = Loc.Str2(nameof (AdditionError__InvalidHeight), "Invalid placement height, must be placed within heights {0} and {1} (inclusive).", "could not place entity due to invalid height, {0} and {1} are integers specifying min and max height");
      TrCore.AdditionError__DesignationOverlap = Loc.Str(nameof (AdditionError__DesignationOverlap), "Overlapping with terrain designation", "could not place entity due overlap with a terrain designation");
      TrCore.AdditionError__TerrainTooLow = Loc.Str(nameof (AdditionError__TerrainTooLow), "Terrain too low", "could not place entity due terrain being too low");
      TrCore.AdditionError__TerrainTooHigh = Loc.Str(nameof (AdditionError__TerrainTooHigh), "Terrain too high", "could not place entity due terrain being too high");
      TrCore.AdditionWarning__HighLift = Loc.Str(nameof (AdditionWarning__HighLift), "Warning: A port is above transport support height. Connection may not be possible.", "Warning that a lift's port may be too high to connect to a transport.");
      TrCore.TrAdditionError__Blocked = Loc.Str1(nameof (TrAdditionError__Blocked), "Blocked by {0}", "could not place an entity because it is blocked by other entity, {0} = name of blocked entity");
      TrCore.RemovalError__HousingHasModuleAttached = Loc.Str(nameof (RemovalError__HousingHasModuleAttached), "Cannot remove a part of settlement that has some service buildings attached.", "could not remove a housing or square as it has a service module attached");
      TrCore.RemovalError__NotContiguous = Loc.Str(nameof (RemovalError__NotContiguous), "Settlement must remain contiguous", "could not remove a housing as it would split the settlement into two individual ones");
      TrCore.RemovalError__ScrapItFirst = Loc.Str(nameof (RemovalError__ScrapItFirst), "Needs to be scrapped", "could not demolish an abandoned building, it needs to be scrapped for parts");
      TrCore.RemovalError__ShipHasCargo = Loc.Str(nameof (RemovalError__ShipHasCargo), "Ship has cargo", "could not demolish a cargo depot as its ship still has some cargo to unload");
      TrCore.RemovalError__DepotMovingCargo = Loc.Str(nameof (RemovalError__DepotMovingCargo), "Cargo is being transferred", "could not demolish a cargo depot as it is transferring cargo right now");
      TrCore.RemovalError__HasProductsStored = Loc.Str(nameof (RemovalError__HasProductsStored), "Stored product needs to be emptied first", "could not demolish a cargo depot / unassign its product as it has some products stored");
      TrCore.RemovalError__RemoveModulesFirst = Loc.Str(nameof (RemovalError__RemoveModulesFirst), "Modules need to be removed first", "could not demolish a depot as its modules need to be removed first");
      TrCore.RemovalError__CannotRemove = Loc.Str(nameof (RemovalError__CannotRemove), "Cannot be removed", "trying to remove a building that is not allowed to be removed (e.g. shipyard)");
      TrCore.RemovalError__HasShipAssigned = Loc.Str(nameof (RemovalError__HasShipAssigned), "Cannot be removed - has a ship assigned", "trying to remove a shipyard that can't be removed as it has the ship assigned");
      TrCore.RemovalError__FarmHasAnimals = Loc.Str(nameof (RemovalError__FarmHasAnimals), "Farm has animals", "could not demolish an animal farm as it has animals");
      TrCore.TrAdditionError__InvalidTransport = Loc.Str(nameof (TrAdditionError__InvalidTransport), "Invalid transport", "generic message for invalid transport");
      TrCore.TrAdditionError__InvalidConnection = Loc.Str(nameof (TrAdditionError__InvalidConnection), "Invalid connection", "could not connect a transport");
      TrCore.TrAdditionError__BeingDestroyed = Loc.Str(nameof (TrAdditionError__BeingDestroyed), "Under deconstruction", "could not place a transport as it the other being connected to it is being destroyed");
      TrCore.TrCutError__ConstructionAlreadyStarted = Loc.Str(nameof (TrCutError__ConstructionAlreadyStarted), "Construction already started", "could not cut transport as it is already being constructed");
      TrCore.TrAdditionError__NoMiniZipper = Loc.Str(nameof (TrAdditionError__NoMiniZipper), "Cannot be split or merged", "transport of this type cannot be split/merged");
      TrCore.TrAdditionError__NotFlat = Loc.Str(nameof (TrAdditionError__NotFlat), "Cannot join if not flat", "could not merge a transport due to not being flat");
      TrCore.TrAdditionError__IncompatiblePortAtStart = Loc.Str(nameof (TrAdditionError__IncompatiblePortAtStart), "Incompatible port at start", "could not place a transport due to incompatible port at transport start");
      TrCore.TrAdditionError__IncompatiblePortAtEnd = Loc.Str(nameof (TrAdditionError__IncompatiblePortAtEnd), "Incompatible port at end", "could not place a transport due to incompatible port at transport end");
      TrCore.TrAdditionError__TypesNoMatch = Loc.Str(nameof (TrAdditionError__TypesNoMatch), "Incompatible type", "could not connect a transport to another one as they don't match");
      TrCore.TrAdditionError__Loop = Loc.Str(nameof (TrAdditionError__Loop), "Start and end are connected to the same transport", "could not place a transport because its start and end are connected to the same transport");
      TrCore.TrAdditionError__SelfColliding = Loc.Str(nameof (TrAdditionError__SelfColliding), "Self-collision", "could not place a transport because it is self-colliding");
      TrCore.TrAdditionError__IncompatibleDirection = Loc.Str(nameof (TrAdditionError__IncompatibleDirection), "Connecting output to output or input to input", "could not place a transport as its direction could not be resolved");
      TrCore.TrAdditionError__CannotReverse = Loc.Str(nameof (TrAdditionError__CannotReverse), "Cannot be reversed", "could not place reverse a transport");
      TrCore.TrAdditionError__NoPillars = Loc.Str(nameof (TrAdditionError__NoPillars), "Cannot find valid pillars placement", "could not place a transport because of no valid pillars (supports) placement");
      TrCore.TrAdditionError__TerrainCollision = Loc.Str(nameof (TrAdditionError__TerrainCollision), "Collision with terrain", "could not place a transport because of collision with terrain");
      TrCore.TrAdditionError__TooCloseToOtherMiniZipper = Loc.Str1(nameof (TrAdditionError__TooCloseToOtherMiniZipper), "Too close to other {0}", "could not create a connector because it is too close to other connector, {0} is translated name of the connector");
      TrCore.TrAdditionError__InvalidTransportCut = Loc.Str(nameof (TrAdditionError__InvalidTransportCut), "Transport cannot be split here", "generic message for invalid transport split position");
      TrCore.TransportTooLong__HowToResolve = Loc.Str(nameof (TransportTooLong__HowToResolve), "To make transport shorter, you can split it with connector or balancer.", "explanation how to make transport shorter");
      TrCore.ManagedArea__EditAction = Loc.Str(nameof (ManagedArea__EditAction), "Edit area", "button to click on to change the area that is managed by the selected tower");
      TrCore.ManagedDesignation__EditAction = Loc.Str(nameof (ManagedDesignation__EditAction), "Edit designation", "button to click on to change the designation that is managed by the selected forestry tower");
      TrCore.VehicleRole__TreeHarvesting = Loc.Str(nameof (VehicleRole__TreeHarvesting), "Tree harvesting", "vehicle role which means the vehicle will harvest trees");
      TrCore.WorldLocation_Orders__Explore = Loc.Str(nameof (WorldLocation_Orders__Explore), "Explore", "button to request ship to explore a selected location");
      TrCore.DesignationError__Invalid = Loc.Str(nameof (DesignationError__Invalid), "Invalid position.", "shown when designation is at invalid position");
      TrCore.DesignationWarning__NoTower = Loc.Str(nameof (DesignationWarning__NoTower), "Must be managed by a mining tower area.", "shown when mining designation is not contained by any mine tower area and cannot be mined.");
      TrCore.DesignationWarning__NoForestryTower = Loc.Str(nameof (DesignationWarning__NoForestryTower), "Must be managed by a forestry tower area.", "shown when forestry designation is not contained by any forestry tower area and cannot be forested.");
      TrCore.DesignationWarning__CannotStartMining = Loc.Str(nameof (DesignationWarning__CannotStartMining), "Cannot start mining here yet, all the edges are too deep below the terrain.", "shown when mining designation is not yet mineable due to its edges being too deep");
      TrCore.DesignationWarning__CannotStartDumping = Loc.Str(nameof (DesignationWarning__CannotStartDumping), "Cannot start dumping here yet, all the edges are too high above the terrain.", "shown when dumping designation is not yet mineable due to its edges being too deep");
      TrCore.DesignationWarning__CannotStartLeveling = Loc.Str(nameof (DesignationWarning__CannotStartLeveling), "Cannot start leveling terrain here yet, all the edges are too low/high above the terrain.", "shown when leveling designation is not yet usable due to its edges being too high/deep");
      TrCore.DesignationWarning__CannotStartForestry = Loc.Str(nameof (DesignationWarning__CannotStartForestry), "Cannot start forestry here yet, ground is not fertile.", "shown when forestry designation is not usable due to terrain not being fertile");
      TrCore.DesignationWarning__CannotPlaceDecal = Loc.Str(nameof (DesignationWarning__CannotPlaceDecal), "Can't paint over terrain.", "shown when player is trying to paint lines outside of hard surface area");
      TrCore.GameSaveLoad__VersionTooHigh = Loc.Str2(nameof (GameSaveLoad__VersionTooHigh), "This save file is from a newer game version ({0}) than what is currently supported ({1}). Are you on an old Steam branch?", "message when game failed to load due to save version being too new");
      TrCore.GameSaveLoad__VersionTooLow = Loc.Str1(nameof (GameSaveLoad__VersionTooLow), "This save file is from an older game version ({0}) which is not supported by this version of the game.", "message when game failed to load due to save version being too old");
      TrCore.GameInitFail = Loc.Str(nameof (GameInitFail), "The game failed to initialize. Please file a bug report if this issue persists.", "message when game initialization failed on generic failure");
      TrCore.GameInitFail__Mod = Loc.Str(nameof (GameInitFail__Mod), "The game failed to initialize likely due to a mod, see logs for more info.", "message when game initialization failed likely due to an installed mod");
      TrCore.GameInitFail__OutOrMemory = Loc.Str(nameof (GameInitFail__OutOrMemory), "The game failed to initialize due to insufficient system memory. Try closing other programs to free-up memory.", "message when game initialization failed doe to out-of-memory error");
      TrCore.GameSaveLoad__MissingMod = Loc.Str3(nameof (GameSaveLoad__MissingMod), "Could not load the given save file as it was missing a mod '{0}' (version {1}, type '{2}').", "message when game failed to load due to missing mod");
      TrCore.GameSaveLoad__MissingFile = Loc.Str1(nameof (GameSaveLoad__MissingFile), "Could not load the given save, file is empty or does not exist: {0}.", "message when game failed to load due to missing save file");
      TrCore.GameSaveLoad__SaveNotFinishedButSaved = Loc.Str2(nameof (GameSaveLoad__SaveNotFinishedButSaved), "An error occurred while moving save file to the final location, but a temporary file can be found at {0}: {1}", "shown when save file cannot be moved. {0} is file path, {1} is error message");
      TrCore.GameSaveLoad__CannotSaveFile = Loc.Str2(nameof (GameSaveLoad__CannotSaveFile), "Failed to write save data to '{0}': {1}\n\nEnsure that the game has access rights to the save directory and there is enough free space on the drive. Access can be blocked by antivirus software or by Windows feature called 'Controlled Folder Access'.", "shown when save file cannot be created. {0} is file path, {1} is error message");
      TrCore.GameSaveLoad__ChecksumFail = Loc.Str1(nameof (GameSaveLoad__ChecksumFail), "Failed to validate checksum of save file: {0}. This save is likely to be corrupted and not loadable in the game. Verify integrity of your disk and file system. You can also try to save the game again.", "shown when save file checksum fails validation. {0} is validation error code");
      TrCore.GameSaveLoad__CannotSaveFile_Crash = Loc.Str2(nameof (GameSaveLoad__CannotSaveFile_Crash), "Failed to save the game '{0}': {1}\n\nIf you are using mods, please ensure they are compatible with the current game version. Otherwise, file a bug report including this error message and your logs, so we can investigate.", "shown when save file cannot be created. {0} is file path, {1} is error message");
      TrCore.GameSaveLoad__CannotLoadFile = Loc.Str(nameof (GameSaveLoad__CannotLoadFile), "Cannot load", "shown when save file cannot be loaded. Example: 'Cannot load someFile'");
      TrCore.GameSaveLoad__SwitchSteamVersion = Loc.Str1(nameof (GameSaveLoad__SwitchSteamVersion), "If you still wish to load this save file, quit the game, go to Steam > Properties > Betas and select {0} version in the dropdown. Steam will then download the older game version for you. Any features added into this version will not be available in the previous ones.", "explains to the player how they can get older version of this game to load an older save file.");
      TrCore.COIHub = Loc.Str(nameof (COIHub), "Community Hub", "button to view the captain of industry community site");
      TrCore.MailingList = Loc.Str(nameof (MailingList), "Mailing list", "button to subscribe for our updates");
      TrCore.Suggestions = Loc.Str(nameof (Suggestions), nameof (Suggestions), "button to open a page for posting suggestions");
      TrCore.ReportIssue = Loc.Str(nameof (ReportIssue), "Report issue", "button to open a page to report game issue / bug");
      TrCore.Credits = Loc.Str(nameof (Credits), nameof (Credits), "button to open credits of the game");
      TrCore.Enabled = Loc.Str(nameof (Enabled), nameof (Enabled), "used when some option is enabled");
      TrCore.Disabled = Loc.Str(nameof (Disabled), nameof (Disabled), "used when some option is disabled");
      TrCore.OptionValStandard = Loc.Str(nameof (OptionValStandard), "Standard", "used as value in configuration. Config can be -10% or +20% but if it is +0% we use 'Standard'. Example: 'Fuel consumption: Standard'");
      TrCore.OptionValIncreased = Loc.Str1(nameof (OptionValIncreased), "{0} increased", "used as value in configuration, example usage: 'Fuel consumption: 20% increased'");
      TrCore.OptionValReduced = Loc.Str1(nameof (OptionValReduced), "{0} reduced", "used as value in configuration, example usage: 'Fuel consumption: 20% reduced'");
      TrCore.OptionValMeters = Loc.Str1Plural(nameof (OptionValMeters), "{0} meter", "{0} meters", "example usages: '-4 meters' or '+1 meter'");
      TrCore.OpenCoIHub = Loc.Str(nameof (OpenCoIHub), "Browse community maps", "In new game wizard. Label on a button to open the CoI Hub community website");
      TrCore.NewGameWizard__MapSelection = Loc.Str(nameof (NewGameWizard__MapSelection), "Map selection", "In new game wizard. Title of a panel that enables to pick a map and configure it");
      TrCore.NewGameWizard__Difficulty = Loc.Str(nameof (NewGameWizard__Difficulty), "Game difficulty", "In new game wizard. Title of a panel that enables to configure game difficulty");
      TrCore.NewGameWizard__Mechanics = Loc.Str(nameof (NewGameWizard__Mechanics), "Mechanics", "In new game wizard. Title of the tab where you configure optional game meachanics");
      TrCore.NewGameWizard__Customization = Loc.Str(nameof (NewGameWizard__Customization), "Customization", "In new game wizard. Title of the tab where you configure game options");
      TrCore.NewGameWizard__GameName = Loc.Str(nameof (NewGameWizard__GameName), "Name your game", "In new game wizard. Label for the game name entry field");
      TrCore.NewGameWizard__GameName__InUse = Loc.Str(nameof (NewGameWizard__GameName__InUse), "This game name is already in use", "In new game wizard. Warning shown next to the game name entry field when the name is already used");
      TrCore.NewGameWizard__GameName__FailedToWrite = Loc.Str1(nameof (NewGameWizard__GameName__FailedToWrite), "Failed to write a test save file to {0}\n\nAvoid using special characters in the game name, and ensure the game has the necessary access rights to the save directory. Additionally, verify that there is sufficient free space on the drive. Access might be blocked by antivirus software or the 'Controlled Folder Access' feature in Windows. Please set up appropriate exception rules in such software or your OS.", "Shown when we fail to write a testing save file to a save folder before starting the new game");
      TrCore.NewGameWizard__GameName__InvalidChars = Loc.Str(nameof (NewGameWizard__GameName__InvalidChars), "The provided game name contains invalid characters", "In new game wizard. Warning shown next to the game name entry field when the name contains invalid characters.");
      TrCore.NewGameWizard__Launch = Loc.Str(nameof (NewGameWizard__Launch), "Launch game", "Button that launches a new game");
      TrCore.MapInvalid = Loc.Str(nameof (MapInvalid), "Map not selected or the file is corrupted.", "shown when the current map file is probably corrupted.");
      TrCore.NewGameWizard__Title = Loc.Str(nameof (NewGameWizard__Title), "New game", "Title of window that enables the player to configure and start a new game. Contains several configuration panels.");
      TrCore.Option_Unlimited = Loc.Str(nameof (Option_Unlimited), "Unlimited", "configuration option that sets something to be unlimited (e.g. oil reserve).");
      TrCore.Tutorials__Title = Loc.Str(nameof (Tutorials__Title), "Tutorials (recommended)", "Title of the tutorials mechanic in the new game flow");
      TrCore.Tutorials__Description = Loc.Str(nameof (Tutorials__Description), "Enables tutorials and goals that grant rewards on completion", "Description of the tutorials mechanic in the new game flow");
      TrCore.ChangeHistory__Title = Loc.Str1(nameof (ChangeHistory__Title), "Change history ({0})", "Label for the change history tab of the difficulty settings window, {0} is the integer number of changes present");
      TrCore.ChangeHistory__EmptyLabel = Loc.Str(nameof (ChangeHistory__EmptyLabel), "No difficulty setting changes found", "Label shown on the change history tab of the difficulty settings window when no changes have yet been made");
      TrCore.ChangeHistory__ConfirmTitle = Loc.Str(nameof (ChangeHistory__ConfirmTitle), "Are you sure?", "Title of the confirmation dialog shown when saving difficulty changes");
      TrCore.ChangeHistory__ConfirmPrompt = Loc.Str1(nameof (ChangeHistory__ConfirmPrompt), "Once applied, you won't be able to change these options again for {0} (in-game):", "Confirmation prompt shown when saving difficulty changes. {0} will be a time duration, such as \"10 years\"");
      TrCore.DateYear__Label = Loc.Str1(nameof (DateYear__Label), "Year {0}", "{0} will be an integer year number");
      TrCore.DifficultySettingsSaved = Loc.Str(nameof (DifficultySettingsSaved), "Difficulty settings saved!", "Notification shown on successful save of game difficulty settings");
      TrCore.StartingLocationDifficulty_Easy = Loc.Str(nameof (StartingLocationDifficulty_Easy), "Easy", "label explaining how difficult a selected island map is (this is the easiest one)");
      TrCore.StartingLocationDifficulty_Medium = Loc.Str(nameof (StartingLocationDifficulty_Medium), "Medium", "label explaining how difficult a selected island map is");
      TrCore.StartingLocationDifficulty_Hard = Loc.Str(nameof (StartingLocationDifficulty_Hard), "Hard", "label explaining how difficult a selected island map is");
      TrCore.StartingLocationDifficulty_Insane = Loc.Str(nameof (StartingLocationDifficulty_Insane), "Insane", "label explaining how difficult a selected island map is (this is the hardest one)");
      TrCore.StartingLocationDifficulty__EasyTooltip = Loc.Str(nameof (StartingLocationDifficulty__EasyTooltip), "A balanced map. Great for beginners or casual players.", "tooltip explaining how difficult a selected island map is");
      TrCore.StartingLocationDifficulty__MediumTooltip = Loc.Str(nameof (StartingLocationDifficulty__MediumTooltip), "A slightly more advanced map that may require some extra planning.", "tooltip explaining how difficult a selected island map is");
      TrCore.StartingLocationDifficulty__HardTooltip = Loc.Str(nameof (StartingLocationDifficulty__HardTooltip), "For skilled players who have some experience with the game already. Requires planning and trade-offs.", "tooltip explaining how difficult a selected island map is");
      TrCore.StartingLocationDifficulty__InsaneTooltip = Loc.Str(nameof (StartingLocationDifficulty__InsaneTooltip), "For players who are ready to fail and like to push their limits. Do not take success for granted.", "tooltip explaining how difficult a selected island map is");
      TrCore.DifficultyFood__Easy = Loc.Str(nameof (DifficultyFood__Easy), "Reduced resource consumption by settlements", "Difficulty impact on food consumption");
      TrCore.DifficultyFood__Normal = Loc.Str(nameof (DifficultyFood__Normal), "Standard resource consumption by settlements", "Difficulty impact on food consumption");
      TrCore.DifficultyFood__Hard = Loc.Str(nameof (DifficultyFood__Hard), "Increased resource consumption by settlements", "Difficulty impact on food consumption");
      TrCore.DifficultyConstruction__Easy = Loc.Str(nameof (DifficultyConstruction__Easy), "Standard construction cost", "Difficulty impact on construction");
      TrCore.DifficultyConstruction__Normal = TrCore.DifficultyConstruction__Easy;
      TrCore.DifficultyConstruction__Hard = Loc.Str(nameof (DifficultyConstruction__Hard), "Increased construction cost", "Difficulty impact on construction");
      TrCore.DifficultyFuel__Easy = Loc.Str(nameof (DifficultyFuel__Easy), "Reduced fuel consumption for vehicles and cargo ships", "Difficulty impact on fuel consumption");
      TrCore.DifficultyFuel__Normal = Loc.Str(nameof (DifficultyFuel__Normal), "Standard fuel consumption for vehicles and cargo ships", "Difficulty impact on fuel consumption");
      TrCore.DifficultyFuel__Hard = Loc.Str(nameof (DifficultyFuel__Hard), "Increased fuel consumption for vehicles and cargo ships", "Difficulty impact on fuel consumption");
      TrCore.DifficultyMaintenance__Easy = Loc.Str(nameof (DifficultyMaintenance__Easy), "Reduced maintenance consumption", "Difficulty impact on maintenance consumption");
      TrCore.DifficultyMaintenance__Normal = Loc.Str(nameof (DifficultyMaintenance__Normal), "Standard maintenance consumption", "Difficulty impact on maintenance consumption");
      TrCore.DifficultyMaintenance__Hard = Loc.Str(nameof (DifficultyMaintenance__Hard), "Increased maintenance consumption", "Difficulty impact on maintenance consumption");
      TrCore.DifficultyMining__Easy = Loc.Str(nameof (DifficultyMining__Easy), "Increased mining yield", "Difficulty impact on mining");
      TrCore.DifficultyMining__Normal = Loc.Str(nameof (DifficultyMining__Normal), "Standard mining yield", "Difficulty impact on mining");
      TrCore.DifficultyMining__Hard = Loc.Str(nameof (DifficultyMining__Hard), "Reduced mining yield", "Difficulty impact on mining");
      TrCore.DifficultyResearch__Easy = Loc.Str(nameof (DifficultyResearch__Easy), "Reduced research cost", "Difficulty impact on research");
      TrCore.DifficultyResearch__Normal = Loc.Str(nameof (DifficultyResearch__Normal), "Standard research cost", "Difficulty impact on mining");
      TrCore.DifficultyResearch__Hard = Loc.Str(nameof (DifficultyResearch__Hard), "Increased research cost", "Difficulty impact on mining");
      TrCore.DifficultyGrowth__Easy = Loc.Str(nameof (DifficultyGrowth__Easy), "Faster growth for crops and trees", "Difficulty impact on aggreculture");
      TrCore.DifficultyGrowth__Normal = Loc.Str(nameof (DifficultyGrowth__Normal), "Standard growth speed for crops and trees", "Difficulty impact on aggreculture");
      TrCore.DifficultyGrowth__Hard = Loc.Str(nameof (DifficultyGrowth__Hard), "Slower growth for crops and trees", "Difficulty impact on aggreculture");
      TrCore.DifficultyRainfall__Easy = Loc.Str(nameof (DifficultyRainfall__Easy), "Increased rainfall and water collection", "Difficulty impact on rainfall");
      TrCore.DifficultyRainfall__Normal = Loc.Str(nameof (DifficultyRainfall__Normal), "Standard rainfall and water collection", "Difficulty impact on rainfall");
      TrCore.DifficultyRainfall__Hard = Loc.Str(nameof (DifficultyRainfall__Hard), "Reduced rainfall and water collection", "Difficulty impact on rainfall");
      TrCore.DifficultyContracts__Easy = Loc.Str(nameof (DifficultyContracts__Easy), "More profitables contracts and cheaper loans", "Difficulty impact on contracts & loans");
      TrCore.DifficultyContracts__Normal = Loc.Str(nameof (DifficultyContracts__Normal), "Standard contracts and loans", "Difficulty impact on contracts & loans");
      TrCore.DifficultyContracts__Hard = Loc.Str(nameof (DifficultyContracts__Hard), "Standard contracts and more expensive loans", "Difficulty impact on contracts & loans");
      TrCore.DifficultyDisease__Easy = Loc.Str(nameof (DifficultyDisease__Easy), "Milder diseases", "Difficulty impact on disease");
      TrCore.DifficultyDisease__Normal = Loc.Str(nameof (DifficultyDisease__Normal), "Standard disease severity", "Difficulty impact on disease");
      TrCore.DifficultyDisease__Hard = Loc.Str(nameof (DifficultyDisease__Hard), "More severe diseases", "Difficulty impact on disease");
      TrCore.DifficultyPollution__Easy = Loc.Str(nameof (DifficultyPollution__Easy), "Reduced impact of pollution and increased base population health", "Difficulty impact on pollution");
      TrCore.DifficultyPollution__Normal = Loc.Str(nameof (DifficultyPollution__Normal), "Standard impact of pollution", "Difficulty impact on pollution");
      TrCore.DifficultyPollution__Hard = Loc.Str(nameof (DifficultyPollution__Hard), "Increased impact of pollution", "Difficulty impact on pollution");
      TrCore.DifficultyUnity__Easy = Loc.Str(nameof (DifficultyUnity__Easy), "Increased Unity generation", "Difficulty impact on unity generation");
      TrCore.DifficultyUnity__Normal = Loc.Str(nameof (DifficultyUnity__Normal), "Standard Unity generation", "Difficulty impact on unity generation");
      TrCore.DifficultyUnity__Hard = Loc.Str(nameof (DifficultyUnity__Hard), "Increased Unity generation. Some Unity actions are more expensive.", "Difficulty impact on unity generation");
      TrCore.TradeStatus__CantAfford = Loc.Str(nameof (TradeStatus__CantAfford), "You don't have enough products to trade with", "player can't afford the current trade as it requires more products than they have");
      TrCore.TradeStatus__NoUnity = Loc.Str(nameof (TradeStatus__NoUnity), "Not enough Unity", "player lack unity to afford the current trade or feature");
      TrCore.TradeStatus__SoldOut = Loc.Str(nameof (TradeStatus__SoldOut), "Sold out - come back later", "trade is 'sold out'");
      TrCore.TradeStatus__NoTradeDock = Loc.Str(nameof (TradeStatus__NoTradeDock), "You need to build a trading dock first", "player can't trade as they are missing a trade dock building that enables them to trade");
      TrCore.TradeStatus__TradeDockNotOperational = Loc.Str(nameof (TradeStatus__TradeDockNotOperational), "Trade dock is not in operational state or ship access is blocked", "player can't trade as their trade dock is not operational");
      TrCore.TradeStatus__NoSpaceInFarm = Loc.Str(nameof (TradeStatus__NoSpaceInFarm), "Not enough space in animal farm or no animal farm built", "player can't trade an animal (e.g. chicken) as they have no farm where they could place it into, note: players confuse regular farm with animal farm, try to make it clear");
      TrCore.Status_LowReputation = Loc.Str1(nameof (Status_LowReputation), "Requires reputation to be at least {0}", "Some feature or trade in a settlement isn't available because player has a low reputation. An example use: Requires reputation to be at least 1");
      TrCore.Contract__MonthlyCost = Loc.Str(nameof (Contract__MonthlyCost), "Monthly cost", "Used in statistics to denote monthly Unity fees for contracts");
      TrCore.Contract__ExchangeCost = Loc.Str(nameof (Contract__ExchangeCost), "Exchange cost", "Used in statistics to denote Unity fees for contracts that are calculated from products that were exchanged");
      TrCore.ContractCancelStatus__IsAssigned = Loc.Str(nameof (ContractCancelStatus__IsAssigned), "Cannot be canceled as it is currently assigned to at least one cargo depot", "tooltip explaining why the current contract cannot be canceled");
      TrCore.ContractCancelStatus__ProductNotResearched = Loc.Str(nameof (ContractCancelStatus__ProductNotResearched), "Some of the traded products are not researched yet", "tooltip explaining why the current contract cannot be established - because some of its traded products is not researched yet");
      TrCore.ContractAssignCheck__ModuleNotSupported = Loc.Str1(nameof (ContractAssignCheck__ModuleNotSupported), "Some modules are not supported - {0}", "Shown when player tries to assign a contract to a depot that has some modules built that are not compatible with that contract");
      TrCore.ContractAssignCheck__IncompatibleProduct = Loc.Str1(nameof (ContractAssignCheck__IncompatibleProduct), "Some modules contain incompatible product - {0}", "Shown when player tries to assign a contract to a depot that has a module with product stored that is not compatible with the contract.");
      TrCore.SettlementTitleWithReputation = Loc.Str2(nameof (SettlementTitleWithReputation), "{0} (Reputation {1})", "shows the current title of a world map settlement ({0}) and the reputation the player has there, example use: 'Settlement (Reputation 4)'");
      TrCore.ReputationIncreaseTitle = Loc.Str1(nameof (ReputationIncreaseTitle), "Increase our reputation to {0}", "text of a panel that enables to donate products to a world map settlement to increase player's reputation, example use 'Increase our reputation to 4'");
      TrCore.WorldMineTitleWithLevel = Loc.Str2(nameof (WorldMineTitleWithLevel), "{0} (Level {1})", "shows the current title of a world map mine ({0}) and the level the mine has, example use: 'Oil rig (Level 4)'");
      TrCore.PopsToAdoptNotAvailable = Loc.Str(nameof (PopsToAdoptNotAvailable), "No people to adopt", "tooltip explaining that people can't be adopted from the world settlement because there are no people available");
      TrCore.TradeStatus__Info = Loc.Str(nameof (TradeStatus__Info), "Products will be delivered to your trading dock immediately", "tooltip explaining how trade works");
      TrCore.TradeStatus__Info_Animal = Loc.Str(nameof (TradeStatus__Info_Animal), "Animals will be transported to your farm immediately", "tooltip explaining how buying animals works");
      TrCore.TradeStatus__Info_CargoShip = Loc.Str(nameof (TradeStatus__Info_CargoShip), "The ship will be immediately available after the purchase", "tooltip explaining how buying cargo ships works");
      TrCore.TradeOfferDelivered = Loc.Str(nameof (TradeOfferDelivered), "Products were delivered to your trading dock!", "shown after player makes a trade that the products were delivered");
      TrCore.TradeOfferDelivered__Animal = Loc.Str(nameof (TradeOfferDelivered__Animal), "Animals were delivered to your farm!", "shown after player makes a trade that the products were delivered");
      TrCore.TradeOfferDelivered__CargoShip = Loc.Str(nameof (TradeOfferDelivered__CargoShip), "You new cargo ship is ready to use!", "shown after player makes a trade that the products were delivered");
      TrCore.RecyclingEfficiency__Title = Loc.Str(nameof (RecyclingEfficiency__Title), "Recycling efficiency", "shows recycling efficiency, more details on this in tooltip ");
      TrCore.RecyclingEfficiency__Tooltip = Loc.Str(nameof (RecyclingEfficiency__Tooltip), "This does not relate to efficiency of this sorting plant. Instead it defines how efficiently your island converts waste into recyclables in places like maintenance depots and settlement. So for instance 40% efficiency means that 40% of the iron used in maintenance ends up in recyclables. What is not converted into recyclables gets wasted. Note that postponing processing of recyclables due to expectations of future increase in efficiency won't help as the conversion is done when recyclables are created not when they are sorted. Efficiency can be increased via research and edicts.", "");
      TrCore.OreSorter_AllowedProducts__Title = Loc.Str(nameof (OreSorter_AllowedProducts__Title), "Products to sort", "more info in OreSorting_AllowedProducts__Tooltip");
      TrCore.OreSorter_AllowedProducts__Tooltip = Loc.Str1(nameof (OreSorter_AllowedProducts__Tooltip), "Choose products that can be sorted in this facility. Trucks will deliver mixed cargo only if all its products are selected here. Trucks will always prefer a sorting plant over dumping onto terrain. But if you assign your mine with a {0} that manages dumping designations, these designations will take precedence over the sorting plant. This setup enables you to skip sorting through cargo that contains only unwanted products.", "{0} - replaced with mine tower");
      TrCore.OreSorter_SelectProducts = Loc.Str(nameof (OreSorter_SelectProducts), "Select products to sort", "Call to action for player to select products to sort in ore sorting plant");
      TrCore.OreSorter_InputTitle = Loc.Str(nameof (OreSorter_InputTitle), "Unsorted input", "title of a container showing all the mixed input products waiting to be sorted in the sorting plant");
      TrCore.OreSorter_LimitReached = Loc.Str1(nameof (OreSorter_LimitReached), "A single facility cannot sort more than {0} different products", "note: this will never be used in singular form, usually number will be around 8 products");
      TrCore.OreSorter_NoSingleLoad__Toggle = Loc.Str(nameof (OreSorter_NoSingleLoad__Toggle), "Reject single-product loads", "toggle in ore sorting plant, more info in OreSorter_NoSingleLoad__Tooltip");
      TrCore.OreSorter_NoSingleLoad__Tooltip = Loc.Str(nameof (OreSorter_NoSingleLoad__Tooltip), "Trucks carrying only one type of product will be rejected.", "tooltip for toggle in ore sorting plant");
      TrCore.OreSorter_BlockedAlert__Tooltip = Loc.Str(nameof (OreSorter_BlockedAlert__Tooltip), "If enabled, you will be notified when this product blocks the output.", "tooltip for toggle in ore sorting plant to set to notify if plant can't no longer work due to its output being blocked");
      TrCore.OreSorter_ProductBlocked__Tooltip = Loc.Str(nameof (OreSorter_ProductBlocked__Tooltip), "The sorter is not accepting more of this product because there is already too much of it.", "tooltip");
      TrCore.OutputPort__Tooltip = Loc.Str(nameof (OutputPort__Tooltip), "ID of the port that outputs this product", "tooltip for a dropdown that allows to select machine's output port for a particular product");
      TrCore.UpointsCategory__Decorations = Loc.Str(nameof (UpointsCategory__Decorations), "Decorations", "title of category that shows unity given for settlements decorations");
      TrCore.UpointsCategory__DecorationsLong = Loc.Str(nameof (UpointsCategory__DecorationsLong), "Bonus from decorations", "title of category that shows unity given for settlements decorations");
      TrCore.GameOver__Title = Loc.Str(nameof (GameOver__Title), "It's over!", "title of the game over message");
      TrCore.GameOver__Message = Loc.Str(nameof (GameOver__Message), "It's over. There are no more people on this island. I wonder what could I have done to prevent this...", "title of the game over message");
      TrCore.StageStr = Loc.Str2(nameof (StageStr), "{0} (stage {1})", "shows stage of some building or process, {0} is building or process name, {1} is stage number like 1 or 2");
      TrCore.EdictReason__HealthLow = Loc.Str2(nameof (EdictReason__HealthLow), "Health is too low (is: {0}, required: {1})", "Explanation shown when some edict could not be activated due to low health");
      TrCore.EdictReason__HousingFull = Loc.Str(nameof (EdictReason__HousingFull), "Housing is full", "Explanation shown when some edict could not be activated due to full housing (e.g. makes no sense to increase pop growth when housing is full)");
      TrCore.PauseTool = Loc.Str(nameof (PauseTool), "Pause tool", "title of a tool that is used to pause / unpause machines and vehicle");
      TrCore.PlanningMode = Loc.Str(nameof (PlanningMode), "Planning mode", "title of a button that enabled or disables a planning mode (mode in which buildings are not built immediately)");
      TrCore.Demolish = Loc.Str(nameof (Demolish), nameof (Demolish), "title of a tool that is used to mark buildings and machines for removal. Please keep this short!");
      TrCore.CloneTool = Loc.Str(nameof (CloneTool), "Copy settings", "title of a tool that is used to copy settings from one machine to another. Please keep this short!");
      TrCore.UnityTool = Loc.Str(nameof (UnityTool), "Unity tool", "title of a tool that is used to spent unity for things such as quick boost or quick delivery. Please keep this short!");
      TrCore.CopyTool = Loc.Str(nameof (CopyTool), "Copy", "title of a tool that is used to copy already existing buildings and machines. Please keep this short!");
      TrCore.CutTool = Loc.Str(nameof (CutTool), "Cut", "title of a tool that is used to cut & paste already existing buildings and machines. Please keep this short!");
      TrCore.UpgradeTool = Loc.Str(nameof (UpgradeTool), "Upgrade", "title of a tool that is used to mass upgrade already existing buildings and machines. Please keep this short!");
      TrCore.PropsRemovalTool = Loc.Str(nameof (PropsRemovalTool), "Remove debris", "title of a tool that is used to remove debris such as stone, bushes and stumps.");
      TrCore.ThisVehicleCannotDriveUnderTransports = Loc.Str(nameof (ThisVehicleCannotDriveUnderTransports), "Note that this vehicle cannot drive under conveyor belts and pipes.", "");
      TrCore.EntityCannotBeReachedDesc = Loc.Str(nameof (EntityCannotBeReachedDesc), "Some or all vehicles are struggling to reach this target, make sure there is an accessible path or disable target's logistics requests.", "");
      TrCore.InvalidImportRouteSuffix = Loc.Str1(nameof (InvalidImportRouteSuffix), "Storage has import route but also has '{0}' slider set or truck import off, these modes are not compatible.", "");
      TrCore.InvalidExportRouteSuffix = Loc.Str1(nameof (InvalidExportRouteSuffix), "Storage has export route but also has '{0}' slider set or truck export off, these modes are not compatible.", "");
      TrCore.StoredProduct__KeepFull = Loc.Str(nameof (StoredProduct__KeepFull), "Keep full", "note: keep this short!! - label of a slider that requires the storage to be full");
      TrCore.StoredProduct__KeepEmpty = Loc.Str(nameof (StoredProduct__KeepEmpty), "Empty", "note: keep this short!! - label of a slider that requires the storage to be empty");
      TrCore.NoVehicleDepotAvailable = Loc.Str(nameof (NoVehicleDepotAvailable), "There is no operational vehicle depot that can accept this type of vehicle", "");
      TrCore.CaptainOfficeNotAvailable = Loc.Str(nameof (CaptainOfficeNotAvailable), "Captain's office is not available", "shown when edict cannot be activated because captain office is not working - lack of employees or power or something");
      TrCore.EdictRequiresAdvancedOffice = Loc.Str(nameof (EdictRequiresAdvancedOffice), "Requires an advanced captain office", "shown when edict cannot be activated as it requires more advanced captain office");
      TrCore.AssignedTrucksEnforce__Title = Loc.Str(nameof (AssignedTrucksEnforce__Title), "Accept assigned only", "PLEASE keep very short (not longer than English is). More info in AssignedTrucksEnforce__Tooltip");
      TrCore.AssignedTrucksEnforce__Tooltip = Loc.Str(nameof (AssignedTrucksEnforce__Tooltip), "When enabled, only the assigned vehicles below will be allowed to collect or deliver cargo here.", "");
      TrCore.VehicleJob__InvalidState = Loc.Str(nameof (VehicleJob__InvalidState), "Invalid state", "truck job status message when a job is in invalid state");
      TrCore.VehicleJob__SearchingForDesignation = Loc.Str(nameof (VehicleJob__SearchingForDesignation), "Searching for a valid terrain designation", "truck job status message");
      TrCore.VehicleJob__DrivingToGoal = Loc.Str(nameof (VehicleJob__DrivingToGoal), "Driving to destination", "truck job status message");
      TrCore.VehicleJob__Loading = Loc.Str(nameof (VehicleJob__Loading), "Loading cargo", "truck job status message");
      TrCore.VehicleJob__Unloading = Loc.Str(nameof (VehicleJob__Unloading), "Unloading cargo", "truck job status message");
      TrCore.VehicleJob__ProcessingSurface = Loc.Str(nameof (VehicleJob__ProcessingSurface), "Processing surface", "truck status when truck is adding / removing a ground surface (e.g. concrete)");
      TrCore.VehicleJob__Navigating = Loc.Str(nameof (VehicleJob__Navigating), "Navigating", "vehicle job status message, vehicle is searching for a path to its destination");
      TrCore.VehicleJob__NavigatingToVia = Loc.Str2(nameof (VehicleJob__NavigatingToVia), "Navigating to '{0}' via '{1}'.", "vehicle job status message, vehicle is searching for a path to {0} (name like 'storage' or 'mining designation') via another destination {1} (e.g. storage).");
      TrCore.ShipCantVisit__NoCrew = Loc.Str(nameof (ShipCantVisit__NoCrew), "Not enough crew", "reason why the action to visit a location by the ship is not available");
      TrCore.ShipCantVisit__NoFuel = Loc.Str(nameof (ShipCantVisit__NoFuel), "Not enough fuel", "reason why the action to visit a location by the ship is not available");
      TrCore.ShipCantVisit__TooFar = Loc.Str(nameof (ShipCantVisit__TooFar), "Location is too far", "reason why the action to visit a location by the ship is not available");
      TrCore.CargoShipDepartNow__Action = Loc.Str(nameof (CargoShipDepartNow__Action), "Depart now", "more info on this in CargoShipDepartNow__Tooltip");
      TrCore.CargoShipDepartNow__Tooltip = Loc.Str(nameof (CargoShipDepartNow__Tooltip), "Request the ship to depart immediately to avoid further waiting", "tooltip for button that enables the player to send cargo ship for products now instead of waiting once ship can arrive fully loaded");
      TrCore.CargoShipCannotDepartNow__WasRequested = Loc.Str(nameof (CargoShipCannotDepartNow__WasRequested), "Already requested", "reason why 'ship depart now' action is not available");
      TrCore.CargoShipCannotDepartNow__General = Loc.Str(nameof (CargoShipCannotDepartNow__General), "Not available", "reason why 'ship depart now' action is not available - general category, specific reason was not given");
      TrCore.TrucksAnalytics__Title = Loc.Str(nameof (TrucksAnalytics__Title), "Analytics", "Tab that contains more insights into jobs done by vehicles and the cargo they exchanged");
      TrCore.LogisticsControl__InputTitle = Loc.Str(nameof (LogisticsControl__InputTitle), "Truck import", "title of a panel allowing to configure truck import");
      TrCore.LogisticsControl__InputTooltip = Loc.Str(nameof (LogisticsControl__InputTooltip), "Configures whether trucks can <b>import</b> products", "tooltip of a panel allowing to configure if trucks can import into the selected machine / building");
      TrCore.LogisticsControl__OutputTitle = Loc.Str(nameof (LogisticsControl__OutputTitle), "Truck export", "title of a panel allowing to configure truck export");
      TrCore.LogisticsControl__OutputTooltip = Loc.Str(nameof (LogisticsControl__OutputTooltip), "Configures whether trucks can <b>export</b> products", "tooltip of a panel allowing to configure if trucks can export from the selected machine / building");
      TrCore.LogisticsControl__On = Loc.Str(nameof (LogisticsControl__On), "On", "keep it short, there is more info in the tooltip for player to understand");
      TrCore.LogisticsControl__On_InputTooltip = Loc.Str(nameof (LogisticsControl__On_InputTooltip), "Truck will be allowed to deliver cargo here if possible.", "");
      TrCore.LogisticsControl__On_OutputTooltip = Loc.Str(nameof (LogisticsControl__On_OutputTooltip), "Truck will be allowed to pick up cargo here if possible.", "");
      TrCore.LogisticsControl__Off = Loc.Str(nameof (LogisticsControl__Off), "Off", "keep it short, there is more info in the tooltip for player to understand");
      TrCore.LogisticsControl__Off_InputTooltip = Loc.Str(nameof (LogisticsControl__Off_InputTooltip), "Trucks will NOT be allowed to deliver cargo here.", "");
      TrCore.LogisticsControl__Off_OutputTooltip = Loc.Str(nameof (LogisticsControl__Off_OutputTooltip), "Trucks will NOT be allowed to pick up cargo here.", "");
      TrCore.LogisticsControl__Auto = Loc.Str(nameof (LogisticsControl__Auto), "Auto", "keep it short, there is more info in the tooltip for player to understand");
      TrCore.LogisticsControl__Auto_InputTooltip = Loc.Str(nameof (LogisticsControl__Auto_InputTooltip), "Trucks will be allowed to deliver a product. But once the product is successfully received via a conveyor / pipe, trucks will no longer be allowed to deliver it. If the conveyor / pipe gets disconnected afterwards, truck deliveries get restored.", "");
      TrCore.LogisticsControl__Auto_OutputTooltip = Loc.Str(nameof (LogisticsControl__Auto_OutputTooltip), "Trucks will be allowed to collect a product. But once the product is successfully dispatched via a conveyor / pipe, trucks will no longer be allowed to collect it. If the conveyor / pipe gets disconnected afterwards, truck collections get restored.", "");
      TrCore.RuinsRecycle__Action = Loc.Str(nameof (RuinsRecycle__Action), "Start recycling", "starts recycling a building for metal scraps");
      TrCore.RuinsRecycleFormatted__Tooltip = Loc.Str2(nameof (RuinsRecycleFormatted__Tooltip), "Recycling this building provides you with useful materials which will be automatically transported by trucks where needed (e.g. {0} will be delivered to a {1}).", "tooltip that explains how building recycling works, {0} - iron scrap, {1} - blast furnace");
      TrCore.ImportRoutesTitle = Loc.Str(nameof (ImportRoutesTitle), "Import routes", "title of a panel configuring custom import routes for trucks");
      TrCore.ExportRoutesTitle = Loc.Str(nameof (ExportRoutesTitle), "Export routes", "title of a panel configuring custom export routes for trucks");
      TrCore.ShipyardKeepEmpty = Loc.Str(nameof (ShipyardKeepEmpty), "Keep empty", "truck will prioritize products remove to keep this building empty");
      TrCore.PartialTrucksToggle = Loc.Str(nameof (PartialTrucksToggle), "Allow partially loaded trucks", "explained in PartialTrucksToggle__Tooltip");
      TrCore.PartialTrucksToggle__Tooltip = Loc.Str(nameof (PartialTrucksToggle__Tooltip), "If this is enabled and there are no jobs in the queue, trucks can be assigned delivery jobs that don’t necessarily utilize their cargo capacity fully (e.g. 50% cargo utilization). This makes logistics more responsive in the early phases of your island. However, later on, it is reasonable to disable this to save on fuel costs.", "tooltip");
      TrCore.StartRepairs = Loc.Str(nameof (StartRepairs), "Start repairs", "requests to start repairs");
      TrCore.WorldMineProductionLvl__Title = Loc.Str(nameof (WorldMineProductionLvl__Title), "Production level", "production / mining level of an oil rig / mine - more details explained in WorldMineProductionLvl__Tooltip");
      TrCore.WorldMineProductionLvl__Tooltip = Loc.Str(nameof (WorldMineProductionLvl__Tooltip), "Production level determines output of this station but also increases its demands on workers, maintenance and Unity. Stations can be upgraded to provide even higher production levels.", "station can represent an oil rig, mine or forestry");
      TrCore.WorldMap = Loc.Str(nameof (WorldMap), "World map", "title/tooltip of a button that opens the world map");
      TrCore.NewFolderTitlePlaceholder = Loc.Str(nameof (NewFolderTitlePlaceholder), "New folder", "placeholder for a title when a new folder is created, e.g. 'New folder #2'");
      TrCore.NewBlueprintTitlePlaceholder = Loc.Str(nameof (NewBlueprintTitlePlaceholder), "Blueprint", "placeholder for a title when a new blueprint is created, e.g. 'Blueprint #2'");
      TrCore.NuclearReactor__DisableBeforeUpgrade = Loc.Str(nameof (NuclearReactor__DisableBeforeUpgrade), "The reactor needs to be turned off before upgrading", "tooltip explaining that a reactor can't be upgraded while it's running");
      TrCore.NuclearReactor__Overheated = Loc.Str(nameof (NuclearReactor__Overheated), "Nuclear reactor was critically overheated and is shutting down. Depending on severity, this may cause loss of loaded fuel, damage to the building (loss of maintenance), and leak of radiation.", "explanation of nuclear reactor overheating state");
      TrCore.NuclearReactor__NotEnoughMaintenance = Loc.Str(nameof (NuclearReactor__NotEnoughMaintenance), "Nuclear reactor cannot start if it is not well maintained. Increase maintenance in order to safely start it.", "explanation of nuclear reactor state when it has low maintenance");
      TrCore.EntityStatus__Broken = Loc.Str(nameof (EntityStatus__Broken), "Broken", "status of a selected entity (keep it short!)");
      TrCore.EntityStatus__ResourceDepleted = Loc.Str(nameof (EntityStatus__ResourceDepleted), "Resource depleted", "shown when entity such as mine has run out of a deposit to mine");
      TrCore.EntityStatus__LowPower = Loc.Str(nameof (EntityStatus__LowPower), "Low power", "not enough electricity - status of a selected entity (keep it short!)");
      TrCore.EntityStatus__NoComputing = Loc.Str(nameof (EntityStatus__NoComputing), "No computing", "not enough computing from datacenter - status of a selected entity (keep it short!)");
      TrCore.EntityStatus__NeedsFuel = Loc.Str(nameof (EntityStatus__NeedsFuel), "Needs fuel", "selected entity can't work as it is lacking fuel (keep it short!)");
      TrCore.SpeedReduced__Machine = Loc.Str1(nameof (SpeedReduced__Machine), "Speed reduced to {0} due to the following factors:", "example replacements: {0} => 50%");
      TrCore.SpeedReduced__Vehicle = Loc.Str1(nameof (SpeedReduced__Vehicle), "Vehicle speed reduced to {0} due to the following factors:", "example replacements: {0} => 50%");
      TrCore.ShipFuelSwitch__Tooltip = Loc.Str(nameof (ShipFuelSwitch__Tooltip), "Allows to switch the ship's fuel type. Changing to some fuels is free, while others require a ship rebuild, costing materials. If there is some cost, it is displayed below.", "");
      TrCore.ShipFuelSwitch__InProgress = Loc.Str(nameof (ShipFuelSwitch__InProgress), "Replacement is in progress. Click to cancel.", "ship's fuel replacement is in progress");
      TrCore.ShipFuelSwitch__InUse = Loc.Str(nameof (ShipFuelSwitch__InUse), "The selected fuel is already in use.", "can't switch fuel type for ship as the selected fuel is already in use");
      TrCore.ShipFuelSwitch__ShipBusy = Loc.Str(nameof (ShipFuelSwitch__ShipBusy), "Not available as ship is currently busy.", "can't switch fuel for ship as the ship is busy");
      TrCore.ShipFuelSwitch__MissingMaterials = Loc.Str(nameof (ShipFuelSwitch__MissingMaterials), "Materials for this modification are not available", "");
      TrCore.Loan_NotAvailable__LowProduction = Loc.Str(nameof (Loan_NotAvailable__LowProduction), "Your production history doesn't meet the minimum criteria to borrow this product.", "");
      TrCore.Loan_NotAvailable__MaxLoans = Loc.Str(nameof (Loan_NotAvailable__MaxLoans), "You've reached the limit for loans you can have at once.", "");
      TrCore.Loan_NotAvailable__QuantityHigh = Loc.Str1(nameof (Loan_NotAvailable__QuantityHigh), "You can't borrow more than {0}", "{0} is replaced with quantity value (number)");
      TrCore.Loan_NotAvailable__QuantityLow = Loc.Str1(nameof (Loan_NotAvailable__QuantityLow), "You can't borrow less than {0}", "{0} is replaced with quantity value (number)");
    }
  }
}
